{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.1",
    "title": "Blue-sky App Database",
    "description": "Nodejs Based API",
    "termsOfService": ""
  },
  "servers": [
    {
      "url": "/api/v1.0.1/",
      "description": "API verion"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth Events"
    },
    {
      "name": "Lead",
      "description": "Lead"
    },
    {
      "name": "Role",
      "description": "Role"
    },
    {
      "name": "Contract",
      "description": "Contract"
    },
    {
      "name": "WorkOrder",
      "description": "WorkOrder"
    },
    {
      "name": "Notes",
      "description": "Notes"
    },
    {
      "name": "Activities",
      "description": "Activities"
    },
    {
      "name": "Catalog",
      "description": "Catalog"
    },
    {
      "name": "Manufacture",
      "description": "manufacture"
    },
    {
      "name": "Material",
      "description": "material"
    },
    {
      "name": "Attribute",
      "description": "attribute"
    },
    {
      "name": "ConfigAttribute",
      "description": "configAttribute"
    },
    {
      "name": "ProductAttribute",
      "description": "productAttribute"
    },
    {
      "name": "ProductCategory",
      "description": "PproductCategory"
    },
    {
      "name": "Inventory",
      "description": "inventory"
    },
    {
      "name": "ApplyWorkOrder",
      "description": "applyWorkOrder"
    },
    {
      "name": "Customer",
      "description": "customer"
    },
    {
      "name": "Project",
      "description": "project"
    },
    {
      "name": "TakeOffQuotes",
      "description": "takeOffQuotes"
    },
    {
      "name": "Chat",
      "description": "chat"
    },
    {
      "name": "Unit",
      "description": "Unit"
    },
    {
      "name": "Vendors",
      "description": "Vendors"
    },
    {
      "name": "Tags",
      "description": "Tags"
    },
    {
      "name": "Items",
      "description": "Items"
    },
    {
      "name": "SaleMaterialQuotes",
      "description": "SaleMaterialQuotes"
    },
    {
      "name": "ProductCategories",
      "description": "ProductCategories"
    },
    {
      "name": "Company",
      "description": "Company"
    },
    {
      "name": "Company Type",
      "description": "Company Type"
    },
    {
      "name": "Brands",
      "description": "Brands"
    },
    {
      "name": "Taxes",
      "description": "Taxes"
    },
    {
      "name": "ServiceTypeItem",
      "description": " ServiceTypeItem"
    },
    {
      "name": "WareHouseItems",
      "description": " WareHouseItems"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "description": "Register a new user with credentials and optional details. Supports avatar upload.",
        "operationId": "authRegister",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["email", "userName", "password"],
                "properties": {
                  "firstName": {
                    "type": "string",
                    "description": "First name of the user",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Last name of the user",
                    "example": "Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email address of the user",
                    "example": "john.doe@example.com"
                  },
                  "userName": {
                    "type": "string",
                    "description": "Unique username",
                    "example": "johndoe123"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "Password for the account",
                    "example": "StrongPass@123"
                  },
                  "department_id": {
                    "type": "integer",
                    "description": "Department ID assigned to the user",
                    "example": 2
                  },
                  "status": {
                    "type": "string",
                    "enum": ["active", "inactive"],
                    "description": "Account status",
                    "example": "active"
                  },
                  "userType": {
                    "type": "string",
                    "enum": ["admin", "manager", "staff", "customer"],
                    "description": "Type of the user",
                    "example": "staff"
                  },
                  "role": {
                    "type": "string",
                    "description": "Role of the user in the system",
                    "example": "Team Lead"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "Contact phone number",
                    "example": "+91-9876543210"
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary",
                    "description": "Profile picture file upload (JPEG/PNG)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully registered",
            "content": {
              "application/json": {
                "example": {
                  "status": true,
                  "message": "User register successfully",
                  "data": {}
                }
              }
            }
          },
          "400": {
            "description": "Validation or bad request",
            "content": {
              "application/json": {
                "example": {
                  "status": false,
                  "message": "Validation failed",
                  "data": {
                    "email": {
                      "msg": "Invalid email format"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "User already exists (email or phone conflict)",
            "content": {
              "application/json": {
                "example": {
                  "status": false,
                  "message": "User already exist",
                  "data": {}
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "status": false,
                  "message": "Register failed",
                  "data": {}
                }
              }
            }
          }
        }
      }
    },

    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "description": "Login User",
        "operationId": "authLogin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email",
                    "example": "taylorpaul@yopmail.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "password",
                    "example": "123456"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/auth/getAllUsers": {
      "get": {
        "tags": ["Auth"],
        "description": "Get All User",
        "operationId": "getAllUsers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "example": "1",
            "description": "Page Number (Default: 1)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "length",
            "in": "query",
            "example": "10",
            "description": "Page Number (Default: 10)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "role",
            "in": "query",
            "description": "Please send these roles only sales, administrator, super_admin, qualified_contractor, quality_assurance_manager, customer",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/auth/getUserById": {
      "get": {
        "tags": ["Auth"],
        "description": "Get User By Id",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "User Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/auth/updateUser": {
      "put": {
        "tags": ["Auth"],
        "description": "Update User",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "User Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "firstName": {
                    "type": "string",
                    "description": "firstName"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "lastName"
                  },
                  "email": {
                    "type": "string",
                    "description": "Email"
                  },
                  "userName": {
                    "type": "string",
                    "description": "userName"
                  },
                  "department_id": {
                    "type": "integer",
                    "description": "department_id"
                  },
                  "status": {
                    "type": "string",
                    "description": "status"
                  },
                  "userType": {
                    "type": "string",
                    "description": "userType"
                  },
                  "password": {
                    "type": "string",
                    "description": "password"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/auth/deleteUser": {
      "delete": {
        "tags": ["Auth"],
        "description": "Delete User",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "User Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/lead/addLead": {
      "post": {
        "tags": ["Lead"],
        "description": "Add Lead",
        "operationId": "addLead",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["leadFrom", "externalId"],
                "properties": {
                  "lattitude": {
                    "type": "string"
                  },
                  "longitude": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "scope": {
                    "type": "string"
                  },
                  "zip": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "firstName"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "customerAddress": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "leadsAge": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "checkBoxAddress": {
                    "type": "boolean"
                  },
                  "customerCity": {
                    "type": "string"
                  },
                  "customerLongitude": {
                    "type": "string"
                  },
                  "customerLatitude": {
                    "type": "string"
                  },
                  "customerZip": {
                    "type": "string"
                  },
                  "customerState": {
                    "type": "string"
                  },
                  "leadLocation": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/lead/getAllLeads": {
      "get": {
        "tags": ["Lead"],
        "description": "Get All Leads",
        "operationId": "getAllLeads",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "example": "1",
            "description": "Page Number (Default: 1)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "length",
            "in": "query",
            "example": "10",
            "description": "Per Page Records (Default: 10)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/lead/getLeadById": {
      "get": {
        "tags": ["Lead"],
        "description": "Get Lead By Id",
        "operationId": "getLeadById",
        "parameters": [
          {
            "name": "leadId",
            "in": "query",
            "description": "Lead Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/lead/leadUpdate": {
      "put": {
        "tags": ["Lead"],
        "description": "Lead Update",
        "operationId": "leadUpdate",
        "parameters": [
          {
            "name": "leadId",
            "in": "query",
            "description": "Lead Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "lattitude": {
                    "type": "string"
                  },
                  "longitude": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "scope": {
                    "type": "string"
                  },
                  "zip": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "customerAddress": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "leadsAge": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "checkBoxAddress": {
                    "type": "boolean"
                  },
                  "customerCity": {
                    "type": "string"
                  },
                  "customerLongitude": {
                    "type": "string"
                  },
                  "customerLatitude": {
                    "type": "string"
                  },
                  "customerZip": {
                    "type": "string"
                  },
                  "customerState": {
                    "type": "string"
                  },
                  "leadLocation": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/lead/leadDelete": {
      "delete": {
        "tags": ["Lead"],
        "description": "Lead Delete",
        "operationId": "leadDelete",
        "parameters": [
          {
            "name": "leadId",
            "in": "query",
            "description": "Lead Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/lead/addRoofMeasure": {
      "post": {
        "tags": ["Lead"],
        "description": "Add Roof Measurement",
        "operationId": "addRoofMeasure",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["leadId"],
                "properties": {
                  "leadId": {
                    "type": "integer"
                  },
                  "roofArea": {
                    "type": "string"
                  },
                  "predominantPitch": {
                    "type": "string"
                  },
                  "ridges": {
                    "type": "string"
                  },
                  "hips": {
                    "type": "string"
                  },
                  "valleys": {
                    "type": "string"
                  },
                  "rakes": {
                    "type": "string"
                  },
                  "eaves": {
                    "type": "string"
                  },
                  "bends": {
                    "type": "string",
                    "description": "firstName"
                  },
                  "wallFlash": {
                    "type": "string"
                  },
                  "step": {
                    "type": "string"
                  },
                  "dripEdge": {
                    "type": "string"
                  },
                  "starter": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/lead/getRoofMeasureByLeadId": {
      "get": {
        "tags": ["Lead"],
        "description": "Get Roof Measure By Id",
        "operationId": "getRoofMeasureByLeadId",
        "parameters": [
          {
            "name": "roofMeasureId",
            "in": "query",
            "description": "Roof Measurement Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/lead/updateRoofMeasure": {
      "put": {
        "tags": ["Lead"],
        "description": "Update Roof Measurement",
        "operationId": "updateRoofMeasure",
        "parameters": [
          {
            "name": "roofMeasureId",
            "in": "query",
            "description": "Roof Measurement Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["leadId"],
                "properties": {
                  "leadId": {
                    "type": "integer"
                  },
                  "roofArea": {
                    "type": "string"
                  },
                  "predominantPitch": {
                    "type": "string"
                  },
                  "ridges": {
                    "type": "string"
                  },
                  "hips": {
                    "type": "string"
                  },
                  "valleys": {
                    "type": "string"
                  },
                  "rakes": {
                    "type": "string"
                  },
                  "eaves": {
                    "type": "string"
                  },
                  "bends": {
                    "type": "string",
                    "description": "firstName"
                  },
                  "wallFlash": {
                    "type": "string"
                  },
                  "step": {
                    "type": "string"
                  },
                  "dripEdge": {
                    "type": "string"
                  },
                  "starter": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/role/addRole": {
      "post": {
        "tags": ["Role"],
        "description": "Add Role",
        "operationId": "addRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["name"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name"
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/role/getAllRoles": {
      "get": {
        "tags": ["Role"],
        "description": "Get All Roles",
        "operationId": "getAllRoles",
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/role/getRoleById": {
      "get": {
        "tags": ["Role"],
        "description": "Get Role By Id",
        "operationId": "getRoleById",
        "parameters": [
          {
            "name": "roleId",
            "in": "query",
            "description": "Role Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/role/updateRole": {
      "put": {
        "tags": ["Role"],
        "description": "Update Role",
        "operationId": "updateRole",
        "parameters": [
          {
            "name": "roleId",
            "in": "query",
            "description": "Role Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name"
                  },
                  "role": {
                    "type": "string",
                    "description": "Role"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/role/deleteRole": {
      "delete": {
        "tags": ["Role"],
        "description": "Delete Role",
        "operationId": "deleteRole",
        "parameters": [
          {
            "name": "roleId",
            "in": "query",
            "description": "Role Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/contract/addContract": {
      "post": {
        "tags": ["Contract"],
        "description": "Add Contract",
        "operationId": "addContract",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "contractorName": {
                    "type": "string",
                    "description": "contractorName"
                  },
                  "logo": {
                    "type": "file",
                    "description": "Upload logo file only (png|jpg|jpeg|heic|gif|bmp)"
                  },
                  "contractorPhone": {
                    "type": "string",
                    "description": "contractorPhone"
                  },
                  "contractorAddress": {
                    "type": "string",
                    "description": "contractorAddress"
                  },
                  "contractorCity": {
                    "type": "string",
                    "description": "contractorCity"
                  },
                  "contractorState": {
                    "type": "string",
                    "description": "contractorState"
                  },
                  "contractorZip": {
                    "type": "string",
                    "description": "contractorZip"
                  },
                  "contractorEmail": {
                    "type": "string",
                    "description": "contractorEmail"
                  },
                  "contacts": {
                    "type": "string",
                    "description": "Contacts"
                  },
                  "ativities": {
                    "type": "string",
                    "description": "Ativities"
                  },
                  "certifications": {
                    "type": "string",
                    "description": "Certifications"
                  },
                  "gaf": {
                    "type": "string",
                    "description": "Gaf"
                  },
                  "gafCertifications": {
                    "type": "string",
                    "description": "gafCertifications"
                  },
                  "gafRating": {
                    "type": "string",
                    "description": "gafRating"
                  },
                  "gafReviews": {
                    "type": "string",
                    "description": "gafReviews"
                  },
                  "certineed": {
                    "type": "string",
                    "description": "Certineed"
                  },
                  "certineedCertifications": {
                    "type": "string",
                    "description": "certineedCertifications"
                  },
                  "certineedRating": {
                    "type": "string",
                    "description": "certineedRating"
                  },
                  "certineedReviews": {
                    "type": "string",
                    "description": "certineedReviews"
                  },
                  "owensCoring": {
                    "type": "string",
                    "description": "owensCoring"
                  },
                  "owensCoringCertifications": {
                    "type": "string",
                    "description": "owensCoringCertifications"
                  },
                  "owensCoringRating": {
                    "type": "string",
                    "description": "owensCoringRating"
                  },
                  "owensCoringReviews": {
                    "type": "string",
                    "description": "owensCoringReviews"
                  },
                  "leadScore": {
                    "type": "string",
                    "description": "leadScore"
                  },
                  "leadSource": {
                    "type": "string",
                    "description": "leadSource"
                  },
                  "qualifiedContractorFormStarted": {
                    "type": "string",
                    "format": "date-time",
                    "description": "qualifiedContractorFormStarted",
                    "example": "yyyy-mm-ddT00:00:00.000Z"
                  },
                  "qualifiedContractorFormSubmitted": {
                    "type": "string",
                    "format": "date-time",
                    "description": "qualifiedContractorFormSubmitted",
                    "example": "yyyy-mm-ddT00:00:00.000Z"
                  },
                  "qualifiedContractorFormApproove": {
                    "type": "string",
                    "format": "date-time",
                    "description": "qualifiedContractorFormApproove",
                    "example": "yyyy-mm-ddT00:00:00.000Z"
                  },
                  "notes": {
                    "type": "string",
                    "description": "notes"
                  },
                  "status": {
                    "type": "string",
                    "description": "status"
                  },
                  "internalNotes": {
                    "type": "string",
                    "description": "internalNotes"
                  },
                  "leadCompleteScore": {
                    "type": "string",
                    "description": "leadCompleteScore"
                  },
                  "regionalZipCode": {
                    "type": "string",
                    "description": "regionalZipCode"
                  },
                  "contractorRegion": {
                    "type": "string",
                    "description": "contractorRegion"
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/contract/getAllContract": {
      "get": {
        "tags": ["Contract"],
        "description": "Get All Contract",
        "operationId": "getAllContract",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "example": "1",
            "description": "Page Number (Default: 1)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "length",
            "in": "query",
            "example": "10",
            "description": "Per Page Records (Default: 10)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "qualifiedContractor",
            "in": "query",
            "example": "true",
            "description": "If you want qualified contracts then send true",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "If you want filter contracts by status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "If you want filter contracts by startDate(yyyy-mm-dd)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "If you want filter contracts by endDate(yyyy-mm-dd)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "If you want filter contracts by region",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/contract/updateContract": {
      "put": {
        "tags": ["Contract"],
        "description": "Update Contract",
        "operationId": "updateContract",
        "parameters": [
          {
            "name": "contractId",
            "in": "query",
            "description": "Contract Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "contractorName": {
                    "type": "string",
                    "description": "contractorName"
                  },
                  "logo": {
                    "type": "file",
                    "description": "Upload logo file only (png|jpg|jpeg|heic|gif|bmp)"
                  },
                  "contractorPhone": {
                    "type": "string",
                    "description": "contractorPhone"
                  },
                  "contractorAddress": {
                    "type": "string",
                    "description": "contractorAddress"
                  },
                  "contractorCity": {
                    "type": "string",
                    "description": "contractorCity"
                  },
                  "contractorState": {
                    "type": "string",
                    "description": "contractorState"
                  },
                  "contractorZip": {
                    "type": "string",
                    "description": "contractorZip"
                  },
                  "contractorEmail": {
                    "type": "string",
                    "description": "contractorEmail"
                  },
                  "contacts": {
                    "type": "string",
                    "description": "Contacts"
                  },
                  "ativities": {
                    "type": "string",
                    "description": "Ativities"
                  },
                  "certifications": {
                    "type": "string",
                    "description": "Certifications"
                  },
                  "gaf": {
                    "type": "string",
                    "description": "Gaf"
                  },
                  "gafCertifications": {
                    "type": "string",
                    "description": "gafCertifications"
                  },
                  "gafRating": {
                    "type": "string",
                    "description": "gafRating"
                  },
                  "gafReviews": {
                    "type": "string",
                    "description": "gafReviews"
                  },
                  "certineed": {
                    "type": "string",
                    "description": "Certineed"
                  },
                  "certineedCertifications": {
                    "type": "string",
                    "description": "certineedCertifications"
                  },
                  "certineedRating": {
                    "type": "string",
                    "description": "certineedRating"
                  },
                  "certineedReviews": {
                    "type": "string",
                    "description": "certineedReviews"
                  },
                  "owensCoring": {
                    "type": "string",
                    "description": "owensCoring"
                  },
                  "owensCoringCertifications": {
                    "type": "string",
                    "description": "owensCoringCertifications"
                  },
                  "owensCoringRating": {
                    "type": "string",
                    "description": "owensCoringRating"
                  },
                  "owensCoringReviews": {
                    "type": "string",
                    "description": "owensCoringReviews"
                  },
                  "leadScore": {
                    "type": "string",
                    "description": "leadScore"
                  },
                  "leadSource": {
                    "type": "string",
                    "description": "leadSource"
                  },
                  "qualifiedContractorFormStarted": {
                    "type": "string",
                    "description": "qualifiedContractorFormStarted"
                  },
                  "qualifiedContractorFormSubmitted": {
                    "type": "string",
                    "description": "qualifiedContractorFormSubmitted"
                  },
                  "qualifiedContractorFormApproove": {
                    "type": "string",
                    "description": "qualifiedContractorFormApproove"
                  },
                  "notes": {
                    "type": "string",
                    "description": "notes"
                  },
                  "status": {
                    "type": "string",
                    "description": "status"
                  },
                  "internalNotes": {
                    "type": "string",
                    "description": "internalNotes"
                  },
                  "leadCompleteScore": {
                    "type": "string",
                    "description": "leadCompleteScore"
                  },
                  "regionalZipCode": {
                    "type": "string",
                    "description": "regionalZipCode"
                  },
                  "contractorRegion": {
                    "type": "string",
                    "description": "contractorRegion"
                  },
                  "qualifiedContractor": {
                    "type": "string",
                    "example": "true",
                    "description": "if you want to qualified the contrantor then send true."
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/contract/deleteContract": {
      "delete": {
        "tags": ["Contract"],
        "description": "Delete Contract",
        "operationId": "deleteContract",
        "parameters": [
          {
            "name": "contractId",
            "in": "query",
            "description": "Contract Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/contract/getContractById": {
      "get": {
        "tags": ["Contract"],
        "description": "Get Contract By Id",
        "operationId": "getContractById",
        "parameters": [
          {
            "name": "contractId",
            "in": "query",
            "description": "Contract Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/contract/mergeContracts": {
      "put": {
        "tags": ["Contract"],
        "description": "Merge Contracts",
        "operationId": "mergeContracts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["parentContractId", "childContractId"],
                "properties": {
                  "parentContractId": {
                    "type": "integer",
                    "description": "parentContractId"
                  },
                  "childContractId": {
                    "type": "integer",
                    "description": "childContractId"
                  },
                  "contractorName": {
                    "type": "string",
                    "description": "contractorName"
                  },
                  "contractorPhone": {
                    "type": "string",
                    "description": "contractorPhone"
                  },
                  "contractorAddress": {
                    "type": "string",
                    "description": "contractorAddress"
                  },
                  "contractorEmail": {
                    "type": "string",
                    "description": "contractorEmail"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/contract/addLeadInteraction": {
      "post": {
        "tags": ["Contract"],
        "description": "Add Lead Interaction",
        "operationId": "addLeadInteraction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["contractId"],
                "properties": {
                  "contractId": {
                    "type": "integer",
                    "description": "contractId"
                  },
                  "date": {
                    "type": "string",
                    "description": "date",
                    "example": "yyyy-mm-ddT00:00:00.000Z"
                  },
                  "interactionType": {
                    "type": "string",
                    "description": "interactionType"
                  },
                  "notes": {
                    "type": "string",
                    "description": "notes"
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/contract/getAllLeadInteraction": {
      "get": {
        "tags": ["Contract"],
        "description": "Get All Lead Interaction",
        "operationId": "getAllLeadInteraction",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "example": "1",
            "description": "Page Number (Default: 1)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "length",
            "in": "query",
            "example": "10",
            "description": "Per Page Records (Default: 10)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/contract/getLeadInteractionByContractId": {
      "get": {
        "tags": ["Contract"],
        "description": "Get Lead Interaction By Contract Id",
        "operationId": "getLeadInteractionByContractId",
        "parameters": [
          {
            "name": "contractId",
            "in": "query",
            "description": "Contract Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/contract/forgotPasswordRequest": {
      "post": {
        "tags": ["Contract"],
        "description": "Forgot Password Request",
        "operationId": "forgotPasswordRequested",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email"
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/contract/resetPassword": {
      "post": {
        "tags": ["Contract"],
        "description": "Reset Password",
        "operationId": "resetPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["email", "otp", "newPassword"],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email"
                  },
                  "otp": {
                    "type": "string",
                    "description": "Otp"
                  },
                  "newPassword": {
                    "type": "string",
                    "description": "New Password"
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/workOrder/addWorkOrder": {
      "post": {
        "tags": ["WorkOrder"],
        "description": "Add Work Order",
        "operationId": "addWorkOrder",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "workOrder": {
                    "type": "string",
                    "description": "workOrder"
                  },
                  "projectId": {
                    "type": "integer",
                    "description": "Project Id"
                  },
                  "workingCategory": {
                    "type": "string",
                    "description": "workingCategory"
                  },
                  "startDate": {
                    "type": "string",
                    "description": "startDate",
                    "example": "yyyy-mm-ddT00:00:00.000Z"
                  },
                  "finishDate": {
                    "type": "string",
                    "description": "finishDate",
                    "example": "yyyy-mm-ddT00:00:00.000Z"
                  },
                  "startingPrice": {
                    "type": "string",
                    "description": "startingPrice"
                  },
                  "description": {
                    "type": "string",
                    "description": "description"
                  },
                  "location": {
                    "type": "string",
                    "description": "location"
                  },
                  "latitude": {
                    "type": "string",
                    "description": "latitude"
                  },
                  "longitude": {
                    "type": "string",
                    "description": "longitude"
                  },
                  "offerBox": {
                    "type": "string",
                    "description": "offerBox"
                  },
                  "region": {
                    "type": "string",
                    "description": "region"
                  },
                  "price": {
                    "type": "string",
                    "description": "price"
                  },
                  "leadAddress": {
                    "type": "string",
                    "description": "leadAddress"
                  },
                  "image": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "address": {
                    "type": "string",
                    "description": "address"
                  },
                  "state": {
                    "type": "string",
                    "description": "state"
                  },
                  "city": {
                    "type": "string",
                    "description": "city"
                  },
                  "zip": {
                    "type": "string",
                    "description": "zip"
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/workOrder/getAllWorkOrder": {
      "get": {
        "tags": ["WorkOrder"],
        "description": "Get All Work Orders",
        "operationId": "getAllWorkOrder",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "example": "1",
            "description": "Page Number (Default: 1)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "length",
            "in": "query",
            "example": "10",
            "description": "Per Page Records (Default: 10)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/workOrder/getWorkOrderById": {
      "get": {
        "tags": ["WorkOrder"],
        "description": "Get Work Order By Id",
        "operationId": "getWorkOrderById",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "query",
            "description": "Work Order Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/workOrder/updateWorkOrder": {
      "put": {
        "tags": ["WorkOrder"],
        "description": "Update Work Order",
        "operationId": "updateWorkOrder",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "query",
            "description": "Work Order Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "title"
                  },
                  "workOrder": {
                    "type": "string",
                    "description": "workOrder"
                  },
                  "workingCategory": {
                    "type": "string",
                    "description": "workingCategory"
                  },
                  "startDate": {
                    "type": "string",
                    "description": "startDate",
                    "example": "yyyy-mm-ddT00:00:00.000Z"
                  },
                  "finishDate": {
                    "type": "string",
                    "description": "finishDate",
                    "example": "yyyy-mm-ddT00:00:00.000Z"
                  },
                  "startingPrice": {
                    "type": "string",
                    "description": "startingPrice"
                  },
                  "description": {
                    "type": "string",
                    "description": "description"
                  },
                  "location": {
                    "type": "string",
                    "description": "location"
                  },
                  "latitude": {
                    "type": "string",
                    "description": "latitude"
                  },
                  "longitude": {
                    "type": "string",
                    "description": "longitude"
                  },
                  "offerBox": {
                    "type": "string",
                    "description": "offerBox"
                  },
                  "region": {
                    "type": "string",
                    "description": "region"
                  },
                  "price": {
                    "type": "string",
                    "description": "price"
                  },
                  "leadAddress": {
                    "type": "string",
                    "description": "leadAddress"
                  },
                  "image": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "address": {
                    "type": "string",
                    "description": "address"
                  },
                  "state": {
                    "type": "string",
                    "description": "state"
                  },
                  "city": {
                    "type": "string",
                    "description": "city"
                  },
                  "zip": {
                    "type": "string",
                    "description": "zip"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/workOrder/deleteWorkOrder": {
      "delete": {
        "tags": ["WorkOrder"],
        "description": "Delete Work Order By Id",
        "operationId": "deleteWorkOrder",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "query",
            "description": "Work Order Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/workOrder/deleteImage": {
      "delete": {
        "tags": ["WorkOrder"],
        "description": "Delete Image By Id",
        "operationId": "deleteImage",
        "parameters": [
          {
            "name": "imageId",
            "in": "query",
            "description": "Image Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/notes/addNotes": {
      "post": {
        "tags": ["Notes"],
        "description": "Add Note",
        "operationId": "addNotes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["moduleName", "moduleId", "description", "userId"],
                "properties": {
                  "userId": {
                    "type": "integer",
                    "description": "userId"
                  },
                  "moduleName": {
                    "type": "string",
                    "description": "moduleName"
                  },
                  "moduleId": {
                    "type": "integer",
                    "description": "moduleId"
                  },
                  "description": {
                    "type": "string",
                    "description": "description"
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/notes/getNoteById": {
      "get": {
        "tags": ["Notes"],
        "description": "Get Note By Id",
        "operationId": "getNoteById",
        "parameters": [
          {
            "name": "noteId",
            "in": "query",
            "description": "Note Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "moduleName",
            "in": "query",
            "description": "Module Name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/notes/deleteNoteById": {
      "delete": {
        "tags": ["Notes"],
        "description": "Delete Note By Id",
        "operationId": "deleteNoteById",
        "parameters": [
          {
            "name": "noteId",
            "in": "query",
            "description": "Note Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/activities/getActivitiesById": {
      "get": {
        "tags": ["Activities"],
        "description": "Get Activities By Id",
        "operationId": "getActivitiesById",
        "parameters": [
          {
            "name": "activityId",
            "in": "query",
            "description": "ActivityId Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "moduleName",
            "in": "query",
            "description": "Module Name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/catalog/addCatalog": {
      "post": {
        "tags": ["Catalog"],
        "description": "Add Catalog",
        "operationId": "addCatalog",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "productName": {
                    "type": "string",
                    "description": "Product Name"
                  },
                  "grade": {
                    "type": "string",
                    "description": "Grade"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Asphalt Shingle",
                      "Wood",
                      "Tile",
                      "Metal",
                      "Synthetic"
                    ],
                    "description": "Type (Active or In Active)"
                  },
                  "waranty": {
                    "type": "string",
                    "description": "Warranty"
                  },
                  "features": {
                    "type": "string",
                    "enum": [
                      "Designer Style",
                      "Storm Resistance",
                      "Quick Install",
                      "Top Selling",
                      "Extended Warranty",
                      "Algae Protection",
                      "Energy Star Certified",
                      "Most Popular"
                    ],
                    "description": "Features"
                  },
                  "price": {
                    "type": "string",
                    "description": "Price"
                  },
                  "topFeatures": {
                    "type": "string",
                    "description": "Top Features"
                  },
                  "installationPackage": {
                    "type": "string",
                    "description": "Installation Package"
                  },
                  "specificationsDescription": {
                    "type": "string",
                    "description": "Specifications Description"
                  },
                  "keySpecifications": {
                    "type": "array",
                    "description": "List of key specifications",
                    "items": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "Title"
                        },
                        "value": {
                          "type": "string",
                          "description": "Value"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description"
                        }
                      }
                    }
                  },
                  "description": {
                    "type": "string",
                    "description": "Description"
                  },
                  "manufacturer": {
                    "type": "string",
                    "description": "Manufacturer"
                  },
                  "catalogId": {
                    "type": "integer",
                    "description": "Catalog Id"
                  },
                  "category": {
                    "type": "integer",
                    "description": "category Id"
                  },
                  "variation": {
                    "type": "array",
                    "description": "Array of variation objects",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "cost": {
                          "type": "string"
                        },
                        "price": {
                          "type": "string"
                        },
                        "sku": {
                          "type": "string"
                        },
                        "colourLabel": {
                          "type": "string"
                        },
                        "colourCode": {
                          "type": "string"
                        },
                        "isDefault": {
                          "type": "boolean"
                        },
                        "measure": {
                          "type": "string"
                        },
                        "measureUnitsSquare": {
                          "type": "string"
                        },
                        "coverageAreaSqft": {
                          "type": "string"
                        },
                        "unitsLinearFootLf": {
                          "type": "string"
                        },
                        "rollLengthFt": {
                          "type": "string"
                        },
                        "rollWidthIn": {
                          "type": "string"
                        },
                        "lf": {
                          "type": "string"
                        },
                        "eaPerUnit": {
                          "type": "string"
                        },
                        "bundlesPerLf": {
                          "type": "string"
                        },
                        "rollSqft": {
                          "type": "string"
                        },
                        "unitsPerSq": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "featureImage": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Feature image"
                  },
                  "thumbnail": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Thumbnail images"
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/catalog/getAllCatalog": {
      "get": {
        "tags": ["Catalog"],
        "description": "Get All Catalog",
        "operationId": "getAllCatalog",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "example": "1",
            "description": "Page Number (Default: 1)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "length",
            "in": "query",
            "example": "10",
            "description": "Per Page Records (Default: 10)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/catalog/getCatalogById": {
      "get": {
        "tags": ["Catalog"],
        "description": "Get Catalog By Id",
        "operationId": "getCatalogById",
        "parameters": [
          {
            "name": "catalogId",
            "in": "query",
            "description": "Catalog Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/catalog/updateCatalogById": {
      "put": {
        "tags": ["Catalog"],
        "description": "Update Catalog",
        "operationId": "updateCatalogById",
        "parameters": [
          {
            "name": "catalogId",
            "in": "query",
            "description": "CatalogId Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "productName": {
                    "type": "string",
                    "description": "Product Name"
                  },
                  "grade": {
                    "type": "string",
                    "description": "Grade"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Asphalt Shingle",
                      "Wood",
                      "Tile",
                      "Metal",
                      "Synthetic"
                    ],
                    "description": "Type (Active or In Active)"
                  },
                  "waranty": {
                    "type": "string",
                    "description": "Warranty"
                  },
                  "features": {
                    "type": "string",
                    "enum": [
                      "Designer Style",
                      "Storm Resistance",
                      "Quick Install",
                      "Top Selling",
                      "Extended Warranty",
                      "Algae Protection",
                      "Energy Star Certified",
                      "Most Popular"
                    ],
                    "description": "Features"
                  },
                  "price": {
                    "type": "string",
                    "description": "Price"
                  },
                  "topFeatures": {
                    "type": "string",
                    "description": "Top Features"
                  },
                  "installationPackage": {
                    "type": "string",
                    "description": "Installation Package"
                  },
                  "specificationsDescription": {
                    "type": "string",
                    "description": "Specifications Description"
                  },
                  "keySpecifications": {
                    "type": "array",
                    "description": "List of key specifications",
                    "items": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "Title"
                        },
                        "value": {
                          "type": "string",
                          "description": "Value"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description"
                        }
                      }
                    }
                  },
                  "description": {
                    "type": "string",
                    "description": "Description"
                  },
                  "manufacturer": {
                    "type": "string",
                    "description": "Manufacturer"
                  },
                  "variations": {
                    "type": "array",
                    "description": "Product variations",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name"
                        },
                        "price": {
                          "type": "string",
                          "description": "Price"
                        },
                        "cost": {
                          "type": "string",
                          "description": "Cost"
                        },
                        "sku": {
                          "type": "string",
                          "description": "SKU"
                        },
                        "colourLabel": {
                          "type": "string",
                          "description": "Colour Label"
                        },
                        "colourCode": {
                          "type": "string",
                          "description": "Colour Code"
                        },
                        "isDefault": {
                          "type": "boolean",
                          "description": "Is Default"
                        }
                      }
                    }
                  },
                  "featureImage": {
                    "type": "array",
                    "description": "Feature Images",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "thumbnail": {
                    "type": "array",
                    "description": "Thumbnail",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/catalog/deleteCatalogById": {
      "delete": {
        "tags": ["Catalog"],
        "description": "Delete Catalog By Id",
        "operationId": "deleteCatalogById",
        "parameters": [
          {
            "name": "catalogId",
            "in": "query",
            "description": "CatalogId Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/manufacturer/addManufacturer": {
      "post": {
        "tags": ["Manufacture"],
        "description": "Add Manufacture",
        "operationId": "addManufacturer",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "file",
                    "description": "Image"
                  },
                  "slug": {
                    "type": "string",
                    "description": "Slug"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["Active", "In Active"],
                    "description": "Status (Active or In Active)"
                  },
                  "title": {
                    "type": "string",
                    "description": "Title"
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/manufacturer/getAllManufacturer": {
      "get": {
        "tags": ["Manufacture"],
        "description": "Get All Manufacturer",
        "operationId": "getAllManufacturer",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "example": "1",
            "description": "Page Number (Default: 1)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "length",
            "in": "query",
            "example": "10",
            "description": "Per Page Records (Default: 10)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/manufacturer/getManufacturerById": {
      "get": {
        "tags": ["Manufacture"],
        "description": "Get Manufacturer By Id",
        "operationId": "getManufacturerById",
        "parameters": [
          {
            "name": "manufacturerId",
            "in": "query",
            "description": "Manufacturer Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/manufacturer/updateManufacturerById": {
      "put": {
        "tags": ["Manufacture"],
        "description": "Update Manufacturer By Id",
        "operationId": "updateManufacturerById",
        "parameters": [
          {
            "name": "manufacturerId",
            "in": "query",
            "description": "Manufacturer Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "file",
                    "description": "Image"
                  },
                  "slug": {
                    "type": "string",
                    "description": "Slug"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["Active", "In Active"],
                    "description": "Status (Active or In Active)"
                  },
                  "title": {
                    "type": "string",
                    "description": "Title"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/manufacturer/deleteManufacturerById": {
      "delete": {
        "tags": ["Manufacture"],
        "description": "Delete Manufacturer By Id",
        "operationId": "deleteManufacturerById",
        "parameters": [
          {
            "name": "manufacturerId",
            "in": "query",
            "description": "Manufacturer Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/material/addMaterial": {
      "post": {
        "tags": ["Material"],
        "description": "Add Materials in Bulk",
        "operationId": "addMaterial",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Material description"
                    },
                    "quantity": {
                      "type": "string",
                      "description": "Quantity of material"
                    },
                    "cost": {
                      "type": "string",
                      "description": "Cost"
                    },
                    "price": {
                      "type": "string",
                      "description": "Price"
                    },
                    "total": {
                      "type": "string",
                      "description": "Total"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully added materials"
          }
        }
      }
    },
    "/material/getMaterialList": {
      "get": {
        "tags": ["Material"],
        "description": "Get Material List",
        "operationId": "getMaterialList",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "example": "1",
            "description": "Page Number (Default: 1)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "length",
            "in": "query",
            "example": "10",
            "description": "Per Page Records (Default: 10)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/material/getMaterialById": {
      "get": {
        "tags": ["Material"],
        "description": "Get Material By Id",
        "operationId": "getMaterialById",
        "parameters": [
          {
            "name": "materialId",
            "in": "query",
            "description": "Material Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/material/updateMaterial": {
      "put": {
        "tags": ["Material"],
        "description": "Update Material By Id",
        "operationId": "updateMaterial",
        "parameters": [
          {
            "name": "materialId",
            "in": "query",
            "description": "Material Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Material description"
                  },
                  "quantity": {
                    "type": "v",
                    "description": "Quantity of material"
                  },
                  "cost": {
                    "type": "string",
                    "description": "Cost per unit"
                  },
                  "price": {
                    "type": "string",
                    "description": "Selling price per unit"
                  },
                  "total": {
                    "type": "string",
                    "description": "Total cost"
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Material updated successfully"
          }
        }
      }
    },
    "/material/deleteMaterial": {
      "delete": {
        "tags": ["Material"],
        "description": "Delete Material By Id",
        "operationId": "deleteMaterial",
        "parameters": [
          {
            "name": "materialId",
            "in": "query",
            "description": "Material Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Material updated successfully"
          }
        }
      }
    },
    "/material/sendMaterialQuotePdf": {
      "get": {
        "tags": ["Material"],
        "description": "Send Material Quote By Id",
        "operationId": "sendMaterialQuotePdf",
        "parameters": [
          {
            "name": "materialId",
            "in": "query",
            "description": "Material Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/material/getMaterialDetailById": {
      "get": {
        "tags": ["Material"],
        "description": "Get Material Detail By Id",
        "operationId": "getMaterialDetailById",
        "parameters": [
          {
            "name": "materialId",
            "in": "query",
            "description": "Material Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/attribute/addAttribute": {
      "post": {
        "tags": ["Attribute"],
        "description": "Add Attribute",
        "operationId": "addAttribute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["name", "slug"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "name"
                  },
                  "slug": {
                    "type": "string",
                    "description": "slug"
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully added Attribute"
          }
        }
      }
    },
    "/attribute/getAllAttributes": {
      "get": {
        "tags": ["Attribute"],
        "description": "Get Attribute List",
        "operationId": "getAllAttributes",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "example": "1",
            "description": "Page Number (Default: 1)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "length",
            "in": "query",
            "example": "10",
            "description": "Per Page Records (Default: 10)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/attribute/getAttributesById": {
      "get": {
        "tags": ["Attribute"],
        "description": "Get Attribute By Id",
        "operationId": "getAttributesById",
        "parameters": [
          {
            "name": "attributeId",
            "in": "query",
            "description": "Attribute Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/attribute/updateAttributesById": {
      "put": {
        "tags": ["Attribute"],
        "description": "Update Attribute By Id",
        "operationId": "updateAttributesById",
        "parameters": [
          {
            "name": "attributeId",
            "in": "query",
            "description": "Attribute Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "name"
                  },
                  "slug": {
                    "type": "string",
                    "description": "slug"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Attribute updated successfully"
          }
        }
      }
    },
    "/attribute/deleteAttributesById": {
      "delete": {
        "tags": ["Attribute"],
        "description": "Delete Attribute By Id",
        "operationId": "deleteAttributesById",
        "parameters": [
          {
            "name": "attributeId",
            "in": "query",
            "description": "Attribute Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Attribute deleted successfully"
          }
        }
      }
    },
    "/configureAttribute/addConfigureAttribute": {
      "post": {
        "tags": ["ConfigAttribute"],
        "description": "Add Config Attribute",
        "operationId": "addConfigureAttribute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["name", "slug", "attributeId"],
                  "properties": {
                    "attributeId": {
                      "type": "integer",
                      "description": "attributeId"
                    },
                    "name": {
                      "type": "string",
                      "description": "name"
                    },
                    "slug": {
                      "type": "string",
                      "description": "slug"
                    },
                    "description": {
                      "type": "string",
                      "description": "description"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully added Attribute"
          }
        }
      }
    },
    "/configureAttribute/getAllConfigAttributes": {
      "get": {
        "tags": ["ConfigAttribute"],
        "description": "Get Config Attribute List",
        "operationId": "getAllConfigAttributes",
        "parameters": [
          {
            "name": "attributeId",
            "in": "query",
            "description": "Attribute Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "example": "1",
            "description": "Page Number (Default: 1)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "length",
            "in": "query",
            "example": "10",
            "description": "Per Page Records (Default: 10)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/configureAttribute/getConfigAttributesById": {
      "get": {
        "tags": ["ConfigAttribute"],
        "description": "Get Config Attribute By Id",
        "operationId": "getConfigAttributesById",
        "parameters": [
          {
            "name": "configAttributeId",
            "in": "query",
            "description": "Config Attribute Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/configureAttribute/updateConfigAttributesById": {
      "put": {
        "tags": ["ConfigAttribute"],
        "description": "Update Config Attribute By Id",
        "operationId": "updateConfigAttributesById",
        "parameters": [
          {
            "name": "configAttributeId",
            "in": "query",
            "description": "Config Attribute Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "name"
                  },
                  "slug": {
                    "type": "string",
                    "description": "slug"
                  },
                  "description": {
                    "type": "string",
                    "description": "description"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Attribute updated successfully"
          }
        }
      }
    },
    "/configureAttribute/deleteConfigAttributesById": {
      "delete": {
        "tags": ["ConfigAttribute"],
        "description": "Delete Config Attribute By Id",
        "operationId": "deleteConfigAttributesById",
        "parameters": [
          {
            "name": "configAttributeId",
            "in": "query",
            "description": "Config Attribute Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Attribute deleted successfully"
          }
        }
      }
    },
    "/productAttribute/addProductAttribute": {
      "post": {
        "tags": ["ProductAttribute"],
        "description": "Add Product Attribute",
        "operationId": "addProductAttribute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["productId", "name", "value"],
                  "properties": {
                    "productId": {
                      "type": "integer",
                      "description": "productId"
                    },
                    "name": {
                      "type": "string",
                      "description": "name"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "value"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully added Attribute"
          }
        }
      }
    },
    "/productAttribute/getAllProductAttributes": {
      "get": {
        "tags": ["ProductAttribute"],
        "description": "Get All Product Attribute List",
        "operationId": "getAllProductAttributes",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "example": "1",
            "description": "Page Number (Default: 1)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "length",
            "in": "query",
            "example": "10",
            "description": "Per Page Records (Default: 10)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/productAttribute/getProductAttributesById": {
      "get": {
        "tags": ["ProductAttribute"],
        "description": "Get Product Attribute By Id",
        "operationId": "getProductAttributesById",
        "parameters": [
          {
            "name": "productAttributeId",
            "in": "query",
            "description": "Product Attribute Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/productAttribute/getAttributesByProductId": {
      "get": {
        "tags": ["ProductAttribute"],
        "description": "Get Product Attribute By ProductId",
        "operationId": "getAttributesByProductId",
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "description": "Product Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/productAttribute/updateProductAttributesById": {
      "put": {
        "tags": ["ProductAttribute"],
        "description": "Update Product Attribute By Id",
        "operationId": "updateProductAttributesById",
        "parameters": [
          {
            "name": "productAttributeId",
            "in": "query",
            "description": "Product Attribute Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "name"
                  },
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "value"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/productAttribute/deleteProductAttributesById": {
      "delete": {
        "tags": ["ProductAttribute"],
        "description": "Delete Product Attribute By Id",
        "operationId": "deleteProductAttributesById",
        "parameters": [
          {
            "name": "productAttributeId",
            "in": "query",
            "description": "Product Attribute Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/productCategory/addProductCategory": {
      "post": {
        "tags": ["ProductCategory"],
        "description": "Add Product Category",
        "operationId": "addProductCategory",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name"
                  },
                  "slug": {
                    "type": "string",
                    "description": "Grade"
                  },
                  "parentCategory": {
                    "type": "string",
                    "description": "ParentCategory"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description"
                  },
                  "image": {
                    "type": "file",
                    "description": "Image"
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully added Attribute"
          }
        }
      }
    },
    "/productCategory/getAllProductCategory": {
      "get": {
        "tags": ["ProductCategory"],
        "description": "Get All Product Category List",
        "operationId": "getAllProductCategory",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "example": "1",
            "description": "Page Number (Default: 1)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "length",
            "in": "query",
            "example": "10",
            "description": "Per Page Records (Default: 10)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/productCategory/getProductCategoryById": {
      "get": {
        "tags": ["ProductCategory"],
        "description": "Get Product Category By Id",
        "operationId": "getProductCategoryById",
        "parameters": [
          {
            "name": "productCategoryId",
            "in": "query",
            "description": "Product Category Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/productCategory/updateProductCategoryById": {
      "put": {
        "tags": ["ProductCategory"],
        "description": "Update Product Category By Id",
        "operationId": "updateProductCategoryById",
        "parameters": [
          {
            "name": "productCategoryId",
            "in": "query",
            "description": "Product Category Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name"
                  },
                  "slug": {
                    "type": "string",
                    "description": "Grade"
                  },
                  "parentCategory": {
                    "type": "string",
                    "description": "ParentCategory"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description"
                  },
                  "image": {
                    "type": "file",
                    "description": "Image"
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/productCategory/deleteProductCategoryById": {
      "delete": {
        "tags": ["ProductCategory"],
        "description": "Delete Product Category By Id",
        "operationId": "deleteProductCategoryById",
        "parameters": [
          {
            "name": "productAttributeId",
            "in": "query",
            "description": "Product Attribute Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/productCategory/getAllCategoryWithProduct": {
      "get": {
        "tags": ["ProductCategory"],
        "description": "Get All Product Category With Product",
        "operationId": "getAllCategoryWithProduct",
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/productCategory/getProductByCategoryId": {
      "get": {
        "tags": ["ProductCategory"],
        "description": "Get Product By Category Id",
        "operationId": "getProductByCategoryId",
        "parameters": [
          {
            "name": "categoryId",
            "in": "query",
            "description": "Category Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/productCategory/getVariationByCategoryId": {
      "get": {
        "tags": ["ProductCategory"],
        "description": "Get Variations By Category Id",
        "operationId": "getVariationByCategoryId",
        "parameters": [
          {
            "name": "categoryId",
            "in": "query",
            "description": "Category Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/inventory/addInventory": {
      "post": {
        "tags": ["Inventory"],
        "description": "Add Inventory",
        "operationId": "addInventory",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "sku": {
                    "type": "string",
                    "description": "SKU"
                  },
                  "brand": {
                    "type": "string",
                    "description": "Brand"
                  },
                  "image": {
                    "type": "file",
                    "description": "Image"
                  },
                  "shortDescription": {
                    "type": "string",
                    "description": "ShortDescription"
                  },
                  "longDescription": {
                    "type": "string",
                    "description": "LongDescription"
                  },
                  "productGallery": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "units": {
                    "type": "array",
                    "description": "List of unit details",
                    "items": {
                      "type": "object",
                      "properties": {
                        "unitOfMeasure": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "string"
                        },
                        "perUnit": {
                          "type": "string"
                        },
                        "upc": {
                          "type": "string"
                        },
                        "dimensions": {
                          "type": "array",
                          "description": "Array of dimension details",
                          "items": {
                            "type": "object",
                            "properties": {
                              "weight": {
                                "type": "string"
                              },
                              "height": {
                                "type": "string"
                              },
                              "length": {
                                "type": "string"
                              },
                              "width": {
                                "type": "string"
                              },
                              "volume": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "vendor": {
                    "type": "array",
                    "description": "List of vendor details",
                    "items": {
                      "type": "object",
                      "properties": {
                        "vendor": {
                          "type": "string"
                        },
                        "vendorItem": {
                          "type": "string"
                        },
                        "vendorCost": {
                          "type": "string"
                        },
                        "vendorUOM": {
                          "type": "string"
                        },
                        "costPerUOM": {
                          "type": "string"
                        },
                        "comments": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully added Attribute"
          }
        }
      }
    },
    "/inventory/getAllInventory": {
      "get": {
        "tags": ["Inventory"],
        "description": "Get All Inventories",
        "operationId": "getAllInventory",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "example": "1",
            "description": "Page Number (Default: 1)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "length",
            "in": "query",
            "example": "10",
            "description": "Per Page Records (Default: 10)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/inventory/getInventoryById": {
      "get": {
        "tags": ["Inventory"],
        "description": "Get Inventory By Id",
        "operationId": "getInventoryById",
        "parameters": [
          {
            "name": "inventoryId",
            "in": "query",
            "description": "Inventory Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/inventory/updateInventorById": {
      "put": {
        "tags": ["Inventory"],
        "description": "Update Inventor By Id",
        "operationId": "updateInventorById",
        "parameters": [
          {
            "name": "inventoryId",
            "in": "query",
            "description": "Inventory Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "sku": {
                    "type": "string",
                    "description": "SKU"
                  },
                  "brand": {
                    "type": "string",
                    "description": "Brand"
                  },
                  "image": {
                    "type": "file",
                    "description": "Image"
                  },
                  "shortDescription": {
                    "type": "string",
                    "description": "ShortDescription"
                  },
                  "longDescription": {
                    "type": "string",
                    "description": "LongDescription"
                  },
                  "productGallery": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "units": {
                    "type": "array",
                    "description": "List of unit details",
                    "items": {
                      "type": "object",
                      "properties": {
                        "unitOfMeasure": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "string"
                        },
                        "perUnit": {
                          "type": "string"
                        },
                        "upc": {
                          "type": "string"
                        },
                        "dimensions": {
                          "type": "object",
                          "properties": {
                            "weight": {
                              "type": "string"
                            },
                            "height": {
                              "type": "string"
                            },
                            "length": {
                              "type": "string"
                            },
                            "width": {
                              "type": "string"
                            },
                            "volume": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "vendor": {
                    "type": "array",
                    "description": "List of vendor details",
                    "items": {
                      "type": "object",
                      "properties": {
                        "vendor": {
                          "type": "string"
                        },
                        "vendorItem": {
                          "type": "string"
                        },
                        "vendorCost": {
                          "type": "string"
                        },
                        "vendorUOM": {
                          "type": "string"
                        },
                        "costPerUOM": {
                          "type": "string"
                        },
                        "comments": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/inventory/deleteInventory": {
      "delete": {
        "tags": ["Inventory"],
        "description": "Delete Inventor By Id",
        "operationId": "deleteInventory",
        "parameters": [
          {
            "name": "inventoryId",
            "in": "query",
            "description": "Inventory Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/applyWorkOrder/addApplyWorkOrder": {
      "post": {
        "tags": ["ApplyWorkOrder"],
        "description": "Add ApplyWorkOrder",
        "operationId": "addApplyWorkOrder",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "workOrderId": {
                    "type": "integer",
                    "description": "workOrderId"
                  },
                  "contractorId": {
                    "type": "integer",
                    "description": "contractorId"
                  },
                  "description": {
                    "type": "string",
                    "description": "description"
                  },
                  "projectName": {
                    "type": "string",
                    "description": "projectName"
                  },
                  "projectLocation": {
                    "type": "string",
                    "description": "projectLocation"
                  },
                  "bidDate": {
                    "type": "string",
                    "description": "bidDate"
                  },
                  "labourCost": {
                    "type": "string",
                    "description": "labourCost"
                  },
                  "totalEstimatedCost": {
                    "type": "string",
                    "description": "totalEstimatedCost"
                  },
                  "startDate": {
                    "type": "string",
                    "description": "startDate"
                  },
                  "completionDate": {
                    "type": "string",
                    "description": "completionDate"
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/applyWorkOrder/getAllApplyWorkOrder": {
      "get": {
        "tags": ["ApplyWorkOrder"],
        "description": "Get All ApplyWorkOrder",
        "operationId": "getAllApplyWorkOrder",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "example": "1",
            "description": "Page Number (Default: 1)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "length",
            "in": "query",
            "example": "10",
            "description": "Per Page Records (Default: 10)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "workOrderId",
            "in": "query",
            "description": "Filter by WorkOrder",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "description": "Filter by Project",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "contractorId",
            "in": "query",
            "description": "Filter by Contract",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by Status(send only accept or reject)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "price",
            "in": "query",
            "description": "Price limit send like this(0-10)",
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Filter by Start Date(yyyy-mm-dd)",
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Filter by Start Date(yyyy-mm-dd)",
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/applyWorkOrder/getApplyWorkOrderById": {
      "get": {
        "tags": ["ApplyWorkOrder"],
        "description": "Get ApplyWorkOrder By Id",
        "operationId": "getApplyWorkOrderById",
        "parameters": [
          {
            "name": "applyWorkOrderId",
            "in": "query",
            "description": "ApplyWorkOrder Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/applyWorkOrder/updateApplyWorkOrderById": {
      "put": {
        "tags": ["ApplyWorkOrder"],
        "description": "Update ApplyWorkOrder By Id",
        "operationId": "updateApplyWorkOrderById",
        "parameters": [
          {
            "name": "applyWorkOrderId",
            "in": "query",
            "description": "ApplyWorkOrder Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Description"
                  },
                  "projectName": {
                    "type": "string",
                    "description": "projectName"
                  },
                  "projectLocation": {
                    "type": "string",
                    "description": "projectLocation"
                  },
                  "bidDate": {
                    "type": "string",
                    "description": "bidDate"
                  },
                  "labourCost": {
                    "type": "string",
                    "description": "labourCost"
                  },
                  "totalEstimatedCost": {
                    "type": "string",
                    "description": "totalEstimatedCost"
                  },
                  "startDate": {
                    "type": "string",
                    "description": "startDate"
                  },
                  "completionDate": {
                    "type": "string",
                    "description": "completionDate"
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/applyWorkOrder/deleteApplyWorkOrderById": {
      "delete": {
        "tags": ["ApplyWorkOrder"],
        "description": "Delete ApplyWorkOrder By Id",
        "operationId": "deleteApplyWorkOrderById",
        "parameters": [
          {
            "name": "applyWorkOrderId",
            "in": "query",
            "description": "ApplyWorkOrder Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/applyWorkOrder/getContractorProposal": {
      "get": {
        "tags": ["ApplyWorkOrder"],
        "description": "Get Contractor Proposal By Id",
        "operationId": "getContractorProposal",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "query",
            "description": "Work Order Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "contractorId",
            "in": "query",
            "description": "Contractor Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/applyWorkOrder/acceptRejectProposal": {
      "put": {
        "tags": ["ApplyWorkOrder"],
        "description": "Accept Reject Proposal",
        "operationId": "acceptRejectProposal",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "query",
            "description": "Work Order Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "contractorId",
            "in": "query",
            "description": "Contractor Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["accept", "reject"],
                    "description": "Type (accept or reject)"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/applyWorkOrder/bidsOnWorkOrder": {
      "get": {
        "tags": ["ApplyWorkOrder"],
        "description": "Bids On Work Order",
        "operationId": "bidsOnWorkOrder",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "query",
            "description": "WorkOrder Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/customer/customerAdd": {
      "post": {
        "tags": ["Customer"],
        "description": "Add Customer",
        "operationId": "customerAdd",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["email", "firstName", "phone"],
                "properties": {
                  "firstName": {
                    "type": "string",
                    "description": "firstName"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "lastName"
                  },
                  "email": {
                    "type": "string",
                    "description": "Email"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Phone"
                  },
                  "customerLocation": {
                    "type": "string",
                    "description": "customerLocation"
                  },
                  "address": {
                    "type": "string",
                    "description": "address"
                  },
                  "state": {
                    "type": "string",
                    "description": "state"
                  },
                  "city": {
                    "type": "string",
                    "description": "city"
                  },
                  "zip": {
                    "type": "string",
                    "description": "zip"
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/customer/getAllCustomer": {
      "get": {
        "tags": ["Customer"],
        "description": "Get All Customers",
        "operationId": "getAllCustomer",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "example": "1",
            "description": "Page Number (Default: 1)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "length",
            "in": "query",
            "example": "10",
            "description": "Page Number (Default: 10)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/customer/getCustomerById": {
      "get": {
        "tags": ["Customer"],
        "description": "Get Customer By Id",
        "operationId": "getCustomerById",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "Customer Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/customer/updateCustomer": {
      "put": {
        "tags": ["Customer"],
        "description": "Update Customer",
        "operationId": "updateCustomer",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "Customer Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "firstName": {
                    "type": "string",
                    "description": "firstName"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "lastName"
                  },
                  "email": {
                    "type": "string",
                    "description": "Email"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Phone"
                  },
                  "customerLocation": {
                    "type": "string",
                    "description": "customerLocation"
                  },
                  "address": {
                    "type": "string",
                    "description": "address"
                  },
                  "state": {
                    "type": "string",
                    "description": "state"
                  },
                  "city": {
                    "type": "string",
                    "description": "city"
                  },
                  "zip": {
                    "type": "string",
                    "description": "zip"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/customer/deleteCustomer": {
      "delete": {
        "tags": ["Customer"],
        "description": "Delete Customer",
        "operationId": "deleteCustomer",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "Customer Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/project/addProject": {
      "post": {
        "tags": ["Project"],
        "description": "Add project",
        "operationId": "addProject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["projectName"],
                "properties": {
                  "projectName": {
                    "type": "string",
                    "description": "projectName"
                  },
                  "latitude": {
                    "type": "string",
                    "description": "latitude"
                  },
                  "longitude": {
                    "type": "string",
                    "description": "longitude"
                  },
                  "price": {
                    "type": "string",
                    "description": "price"
                  },
                  "address": {
                    "type": "string",
                    "description": "address"
                  },
                  "state": {
                    "type": "string",
                    "description": "state"
                  },
                  "city": {
                    "type": "string",
                    "description": "city"
                  },
                  "zip": {
                    "type": "string",
                    "description": "zip"
                  },
                  "scope": {
                    "type": "string",
                    "description": "scope"
                  },
                  "description": {
                    "type": "string",
                    "description": "description"
                  },
                  "location": {
                    "type": "string",
                    "description": "location"
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/project/getAllProject": {
      "get": {
        "tags": ["Project"],
        "description": "Get All Projects",
        "operationId": "getAllProject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "example": "1",
            "description": "Page Number (Default: 1)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "length",
            "in": "query",
            "example": "10",
            "description": "Page Number (Default: 10)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/project/getProjectById": {
      "get": {
        "tags": ["Project"],
        "description": "Get Project By Id",
        "operationId": "getProjectById",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "description": "Project Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/project/updateProject": {
      "put": {
        "tags": ["Project"],
        "description": "Update Project",
        "operationId": "updateProject",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "description": "Project Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "projectName": {
                    "type": "string",
                    "description": "projectName"
                  },
                  "latitude": {
                    "type": "string",
                    "description": "latitude"
                  },
                  "longitude": {
                    "type": "string",
                    "description": "longitude"
                  },
                  "price": {
                    "type": "string",
                    "description": "price"
                  },
                  "address": {
                    "type": "string",
                    "description": "address"
                  },
                  "state": {
                    "type": "string",
                    "description": "state"
                  },
                  "city": {
                    "type": "string",
                    "description": "city"
                  },
                  "zip": {
                    "type": "string",
                    "description": "zip"
                  },
                  "scope": {
                    "type": "string",
                    "description": "scope"
                  },
                  "description": {
                    "type": "string",
                    "description": "description"
                  },
                  "location": {
                    "type": "string",
                    "description": "location"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/project/deleteProject": {
      "delete": {
        "tags": ["Project"],
        "description": "Delete Project",
        "operationId": "deleteProject",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "description": "Project Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/takeOffQuote/addTakeOffQuote": {
      "post": {
        "tags": ["TakeOffQuotes"],
        "description": "Add multiple Take Off Quotes",
        "operationId": "addTakeOffQuotes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["productId"],
                  "properties": {
                    "categoryId": {
                      "type": "integer",
                      "description": "categoryId"
                    },
                    "categoryName": {
                      "type": "string",
                      "description": "categoryName"
                    },
                    "productId": {
                      "type": "integer",
                      "description": "productId"
                    },
                    "description": {
                      "type": "string",
                      "description": "description"
                    },
                    "cost": {
                      "type": "string",
                      "description": "cost"
                    },
                    "margin": {
                      "type": "string",
                      "description": "margin"
                    },
                    "price": {
                      "type": "string",
                      "description": "price"
                    },
                    "quantity": {
                      "type": "string",
                      "description": "quantity"
                    },
                    "uom": {
                      "type": "string",
                      "description": "uom"
                    },
                    "total": {
                      "type": "string",
                      "description": "total"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Quotes successfully added"
          }
        }
      }
    },
    "/takeOffQuote/getAllTakeOffQuote": {
      "get": {
        "tags": ["TakeOffQuotes"],
        "description": "Get All TakeOffQuote",
        "operationId": "getAllTakeOffQuote",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "example": "1",
            "description": "Page Number (Default: 1)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "length",
            "in": "query",
            "example": "10",
            "description": "Page Number (Default: 10)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/takeOffQuote/getTakeOffQuoteById": {
      "get": {
        "tags": ["TakeOffQuotes"],
        "description": "Get TakeOffQuote ById",
        "operationId": "getTakeOffQuoteById",
        "parameters": [
          {
            "name": "takeOffQuoteId",
            "in": "query",
            "description": "TakeOffQuote Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/takeOffQuote/updateTakeOffQuoteById": {
      "put": {
        "tags": ["TakeOffQuotes"],
        "description": "Update TakeOffQuote By Id",
        "operationId": "updateTakeOffQuoteById",
        "parameters": [
          {
            "name": "takeOffQuoteId",
            "in": "query",
            "description": "TakeOffQuote Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "productId": {
                    "type": "integer",
                    "description": "productId"
                  },
                  "description": {
                    "type": "string",
                    "description": "description"
                  },
                  "cost": {
                    "type": "string",
                    "description": "cost"
                  },
                  "margin": {
                    "type": "string",
                    "description": "margin"
                  },
                  "price": {
                    "type": "string",
                    "description": "price"
                  },
                  "quantity": {
                    "type": "string",
                    "description": "quantity"
                  },
                  "uom": {
                    "type": "string",
                    "description": "uom"
                  },
                  "total": {
                    "type": "string",
                    "description": "total"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/takeOffQuote/deleteTakeOffQuoteById": {
      "delete": {
        "tags": ["TakeOffQuotes"],
        "description": "Delete TakeOffQuote By Id",
        "operationId": "deleteTakeOffQuoteById",
        "parameters": [
          {
            "name": "takeOffQuoteId",
            "in": "query",
            "description": "TakeOffQuote Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/chat/addChat": {
      "post": {
        "tags": ["Chat"],
        "description": "Add Chat",
        "operationId": "addChat",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "senderId",
                  "recieverId",
                  "message",
                  "moduleId",
                  "module"
                ],
                "properties": {
                  "senderId": {
                    "type": "integer",
                    "description": "senderId"
                  },
                  "recieverId": {
                    "type": "integer",
                    "description": "recieverId"
                  },
                  "message": {
                    "type": "string",
                    "description": "message"
                  },
                  "module": {
                    "type": "string",
                    "description": "module"
                  },
                  "moduleId": {
                    "type": "integer",
                    "description": "moduleId"
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/chat/getAllChat": {
      "get": {
        "tags": ["Chat"],
        "description": "Get All Chat",
        "operationId": "getAllChat",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "example": "1",
            "description": "Page Number (Default: 1)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "length",
            "in": "query",
            "example": "10",
            "description": "Page Number (Default: 10)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "moduleId",
            "in": "query",
            "description": "Module Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/chat/deleteMessage": {
      "delete": {
        "tags": ["Chat"],
        "description": "Delete Message By Id",
        "operationId": "deleteMessage",
        "parameters": [
          {
            "name": "senderId",
            "in": "query",
            "description": "Sender Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "Message Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/chat/updateMessage": {
      "put": {
        "tags": ["Chat"],
        "description": "Update Chat",
        "operationId": "updateMessage",
        "parameters": [
          {
            "name": "senderId",
            "in": "query",
            "description": "Sender Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "Message Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "message"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/units/addUnits": {
      "post": {
        "tags": ["Unit"],
        "description": "Add Unit",
        "operationId": "addUnits",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "Kilogram"
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Unit added successfully"
          },
          "400": {
            "description": "Validation error or failed request"
          }
        }
      }
    },
    "/units/getAddUnits": {
      "get": {
        "tags": ["Unit"],
        "description": "Get all Units added by the logged-in user",
        "operationId": "getAddUnits",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "example": 1,
            "description": "Page number (Default: 1)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "length",
            "in": "query",
            "example": 10,
            "description": "Number of units per page (Default: 10)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/units/getUnitById": {
      "get": {
        "tags": ["Unit"],
        "description": "Get Unit By Id",
        "operationId": "getUnitById",
        "parameters": [
          {
            "name": "unitId",
            "in": "query",
            "description": "Unit Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Unit Not Found"
          }
        }
      }
    },
    "/units/deleteUnits": {
      "delete": {
        "tags": ["Unit"],
        "description": "Delete Unit By Id",
        "operationId": "deleteUnits",
        "parameters": [
          {
            "name": "unitId",
            "in": "query",
            "description": "Unit Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/units/updateUnits": {
      "put": {
        "tags": ["Unit"],
        "description": "Update Unit By Id",
        "operationId": "updateUnits",
        "parameters": [
          {
            "name": "unitId",
            "in": "query",
            "description": "Unit Id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Kilogram"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/vendors/addVendors": {
      "post": {
        "tags": ["Vendors"],
        "description": "Add a new Vendor",
        "operationId": "addVendors",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "ABC Supplier"
                  },
                  "email": {
                    "type": "string",
                    "example": "abc@supplier.com"
                  },
                  "phone": {
                    "type": "string",
                    "example": "+91-9876543210"
                  },
                  "bill_to": {
                    "type": "string",
                    "example": "123 Billing Street, Chandigarh"
                  },
                  "ship_to": {
                    "type": "string",
                    "example": "456 Shipping Lane, Mohali"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/vendors/getVendorsById": {
      "get": {
        "tags": ["Vendors"],
        "description": "Get Vendor By Id",
        "operationId": "getVendorsById",
        "parameters": [
          {
            "name": "vendorId",
            "in": "query",
            "description": "Vendor Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/vendors/getAllVendors": {
      "get": {
        "tags": ["Vendors"],
        "description": "Get All Vendors with pagination and filters",
        "operationId": "getAllVendors",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default 1)",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Items per page (default 5)",
            "schema": {
              "type": "integer",
              "default": 5
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search by vendor name/email/phone",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit results",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "take_all",
            "in": "query",
            "description": "If true, return all vendors without pagination",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Filter by vendor id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/vendors/deleteVendors": {
      "delete": {
        "tags": ["Vendors"],
        "description": "Delete Vendor By Id",
        "operationId": "deleteVendors",
        "parameters": [
          {
            "name": "vendorId",
            "in": "query",
            "description": "Vendor Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response"
          }
        }
      }
    },
    "/vendors/updateVendors": {
      "put": {
        "tags": ["Vendors"],
        "description": "Update Vendor By Id",
        "operationId": "updateVendors",
        "parameters": [
          {
            "name": "vendorId",
            "in": "query",
            "description": "Vendor Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "ABC Suppliers"
                  },
                  "email": {
                    "type": "string",
                    "example": "abc@suppliers.com"
                  },
                  "phone": {
                    "type": "string",
                    "example": "9876543210"
                  },
                  "bill_to": {
                    "type": "string",
                    "example": "123 Billing St, City"
                  },
                  "ship_to": {
                    "type": "string",
                    "example": "456 Shipping Ln, City"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Vendor updated successfully"
          }
        }
      }
    },
    "/tags/addTags": {
      "post": {
        "tags": ["Tags"],
        "description": "Add a new Tag",
        "operationId": "addTags",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Urgent"
                  },
                  "color": {
                    "type": "string",
                    "example": "#FF5733"
                  },
                  "type": {
                    "type": "string",
                    "example": "priority"
                  }
                },
                "required": ["title"]
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tag added successfully"
          }
        }
      }
    },
    "/tags/getTagsById": {
      "get": {
        "tags": ["Tags"],
        "description": "Get Tag by Id",
        "operationId": "getTagsById",
        "parameters": [
          {
            "name": "tagId",
            "in": "query",
            "description": "Tag Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tag displayed successfully"
          },
          "400": {
            "description": "Tag not found or error"
          }
        }
      }
    },
    "/tags/getAllTags": {
      "get": {
        "tags": ["Tags"],
        "description": "Get All Tags (with pagination and search)",
        "operationId": "getAllTags",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default: 1)",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Items per page (default: 10)",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search keyword",
            "required": false,
            "schema": {
              "type": "string",
              "example": "priority"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tags displayed successfully"
          },
          "400": {
            "description": "Tags not found or error"
          }
        }
      }
    },
    "/tags/deleteTags": {
      "delete": {
        "tags": ["Tags"],
        "description": "Delete a Tag by Id",
        "operationId": "deleteTags",
        "parameters": [
          {
            "name": "tagId",
            "in": "query",
            "description": "Tag Id to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 7
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tag deleted successfully"
          },
          "400": {
            "description": "Tag not found or deletion failed"
          }
        }
      }
    },
    "/tags/updateTags": {
      "put": {
        "tags": ["Tags"],
        "description": "Update a Tag by Id",
        "operationId": "updateTags",
        "parameters": [
          {
            "name": "tagId",
            "in": "query",
            "description": "Tag Id to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 7
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Urgent"
                  },
                  "color": {
                    "type": "string",
                    "example": "#FF5733"
                  },
                  "type": {
                    "type": "string",
                    "example": "priority"
                  }
                },
                "required": ["title", "color", "type"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tags updated successfully"
          },
          "400": {
            "description": "Tag not found or update failed"
          }
        }
      }
    },
    "/items/addItems": {
      "post": {
        "tags": ["Items"],
        "description": "Add a new Item with associations (brand, categories, tags, units, vendors, webs, and images).",
        "operationId": "addItems",
        "security": [
          {
            "jwt": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "sku": {
                    "type": "string",
                    "example": "SKU-12345"
                  },
                  "short_description": {
                    "type": "string",
                    "example": "Compact drill machine"
                  },
                  "description": {
                    "type": "string",
                    "example": "A powerful drill machine for heavy-duty tasks"
                  },
                  "website_id": {
                    "type": "integer",
                    "example": 2
                  },
                  "freeform": {
                    "type": "string",
                    "example": "Custom freeform data"
                  },
                  "meta": {
                    "type": "string",
                    "example": "SEO meta keywords"
                  },
                  "title_tag": {
                    "type": "string",
                    "example": "Drill Machine"
                  },
                  "meta_description": {
                    "type": "string",
                    "example": "Meta description for SEO"
                  },
                  "status": {
                    "type": "string",
                    "example": "active"
                  },
                  "service": {
                    "type": "string",
                    "example": "warranty"
                  },
                  "brand_id": {
                    "type": "integer",
                    "example": 5
                  },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Main item image"
                  },
                  "itemCategories": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "example": 3
                    }
                  },
                  "itemTag": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "example": 8
                    }
                  },
                  "itemUnits": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "unit_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "qty": {
                          "type": "number",
                          "example": 100
                        },
                        "per_unit_id": {
                          "type": "integer",
                          "example": 2
                        },
                        "upc": {
                          "type": "string",
                          "example": "1234567890"
                        },
                        "height": {
                          "type": "number",
                          "example": 10.5
                        },
                        "weight": {
                          "type": "number",
                          "example": 2.3
                        },
                        "length": {
                          "type": "number",
                          "example": 20
                        },
                        "width": {
                          "type": "number",
                          "example": 5
                        }
                      }
                    }
                  },
                  "itemVendors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "vendor_id": {
                          "type": "integer",
                          "example": 4
                        },
                        "item": {
                          "type": "string",
                          "example": "Vendor drill model"
                        },
                        "cost": {
                          "type": "number",
                          "example": 125.5
                        },
                        "uom": {
                          "type": "integer",
                          "example": 1
                        },
                        "cost_per_each": {
                          "type": "number",
                          "example": 12.5
                        },
                        "comment": {
                          "type": "string",
                          "example": "Special vendor price"
                        },
                        "is_stocked": {
                          "type": "boolean",
                          "example": true
                        },
                        "unit_id": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  },
                  "itemWebs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "category": {
                          "type": "string",
                          "example": "Tools"
                        },
                        "description": {
                          "type": "string",
                          "example": "Web display description"
                        },
                        "sequence": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  },
                  "itemImages": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Additional item images"
                  }
                },
                "required": ["sku", "short_description", "description"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item added successfully"
          },
          "400": {
            "description": "Failed to add item"
          }
        }
      }
    },
    "/items/getItemsById": {
      "get": {
        "tags": ["Items"],
        "description": "Get item details by Item Id (includes associations like brand, categories, tags, units, vendors, etc. if implemented in service).",
        "operationId": "getItemsById",
        "parameters": [
          {
            "name": "itemId",
            "in": "query",
            "description": "ID of the item to fetch",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 12
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Item details fetched successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": true,
                  "message": "Item displayed successfully",
                  "data": {
                    "id": 12,
                    "sku": "SKU-12345",
                    "short_description": "Compact drill machine",
                    "description": "A powerful drill machine for heavy-duty tasks",
                    "brand": {
                      "id": 5,
                      "name": "Bosch"
                    },
                    "categories": [
                      {
                        "id": 3,
                        "name": "Tools"
                      }
                    ],
                    "tags": [
                      {
                        "id": 8,
                        "title": "HeavyDuty"
                      }
                    ],
                    "units": [
                      {
                        "unit_id": 1,
                        "qty": 100,
                        "per": 2
                      }
                    ],
                    "vendors": [
                      {
                        "vendor_id": 4,
                        "item": "Vendor drill model",
                        "cost": 125.5
                      }
                    ],
                    "images": [
                      {
                        "id": 1,
                        "file": "files/drill1.png"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to fetch item",
            "content": {
              "application/json": {
                "example": {
                  "status": false,
                  "message": "Item not found",
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "/items/getAllItems": {
      "get": {
        "tags": ["Items"],
        "description": "Fetch all items with pagination, search and filter options",
        "operationId": "getAllItems",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default: 1)",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of records per page (default: 10)",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search keyword for items (title, SKU, description, etc.)",
            "required": false,
            "schema": {
              "type": "string",
              "example": "drill"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit number of results",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 50
            }
          },
          {
            "name": "take_all",
            "in": "query",
            "description": "If true, fetch all items ignoring pagination",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Filter by specific item IDs (array of IDs)",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "example": [12, 15, 20]
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "per_id",
            "in": "query",
            "description": "Filter by specific parent IDs (array of IDs)",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "example": [2, 4]
            },
            "style": "form",
            "explode": true
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Items fetched successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": true,
                  "message": "Items displayed successfully",
                  "data": {
                    "pagination": {
                      "page": 1,
                      "per_page": 10,
                      "total": 125,
                      "total_pages": 13
                    },
                    "records": [
                      {
                        "id": 12,
                        "sku": "SKU-12345",
                        "short_description": "Compact drill machine",
                        "description": "A powerful drill machine for heavy-duty tasks",
                        "brand": {
                          "id": 5,
                          "name": "Bosch"
                        },
                        "tags": [
                          {
                            "id": 8,
                            "title": "HeavyDuty"
                          }
                        ],
                        "units": [
                          {
                            "unit_id": 1,
                            "qty": 100
                          }
                        ],
                        "vendors": [
                          {
                            "vendor_id": 4,
                            "cost": 125.5
                          }
                        ],
                        "images": [
                          {
                            "id": 1,
                            "file": "files/drill1.png"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to fetch items",
            "content": {
              "application/json": {
                "example": {
                  "status": false,
                  "message": "Items not found",
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "/items/deleteItems": {
      "delete": {
        "tags": ["Items"],
        "description": "Delete item by ID",
        "operationId": "deleteItems",
        "parameters": [
          {
            "name": "itemId",
            "in": "query",
            "description": "Unique ID of the item to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 25
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Item deleted successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": true,
                  "message": "Item deleted successfully",
                  "data": {}
                }
              }
            }
          },
          "400": {
            "description": "Failed to delete item",
            "content": {
              "application/json": {
                "example": {
                  "status": false,
                  "message": "Item not found",
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "/items/updateItems": {
      "put": {
        "tags": ["Items"],
        "summary": "Update an item",
        "description": "Updates an item by itemId and supports uploading images and related data like categories, tags, vendors, units, webs.",
        "operationId": "updateItems",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "itemId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the item to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "sku": {
                    "type": "string",
                    "example": "SKU-12345"
                  },
                  "short_description": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "website_id": {
                    "type": "integer",
                    "example": 2
                  },
                  "status": {
                    "type": "string",
                    "enum": ["active", "inactive"]
                  },
                  "service": {
                    "type": "string"
                  },
                  "brand_id": {
                    "type": "integer",
                    "example": 5
                  },
                  "itemCategories": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "example": [1, 2, 3]
                  },
                  "itemTag": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "example": [4, 6]
                  },
                  "itemUnits": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "unit_id": {
                          "type": "integer"
                        },
                        "qty": {
                          "type": "number"
                        },
                        "per_unit_id": {
                          "type": "integer"
                        },
                        "upc": {
                          "type": "string"
                        },
                        "height": {
                          "type": "number"
                        },
                        "weight": {
                          "type": "number"
                        },
                        "length": {
                          "type": "number"
                        },
                        "width": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "itemVendors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "vendor_id": {
                          "type": "integer"
                        },
                        "item": {
                          "type": "string"
                        },
                        "cost": {
                          "type": "number"
                        },
                        "uom": {
                          "type": "string"
                        },
                        "cost_per_each": {
                          "type": "number"
                        },
                        "comment": {
                          "type": "string"
                        },
                        "is_stocked": {
                          "type": "boolean"
                        },
                        "unit_id": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "itemWebs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "category": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "sequence": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "deletedItemImage": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "example": [10, 12]
                  },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Main image file"
                  },
                  "itemImages": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Multiple additional images"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or update failed"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/saleMaterial/addSaleMaterialQuotes": {
      "post": {
        "tags": ["SaleMaterialQuotes"],
        "summary": "Add Sale Material Quotes",
        "description": "Creates a new Sale Material Quote with header, totals, materials, and additional items.",
        "operationId": "addSaleMaterialQuotes",
        "security": [
          {
            "jwt": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customer_id": {
                    "type": "integer",
                    "example": 101
                  },
                  "lead_project_id": {
                    "type": "integer",
                    "example": 55
                  },
                  "ship_to": {
                    "type": "string",
                    "example": "New York Warehouse"
                  },
                  "additional_total": {
                    "type": "number",
                    "example": 200.5
                  },
                  "totalTab": {
                    "type": "object",
                    "properties": {
                      "material_total": {
                        "type": "number",
                        "example": 1500
                      },
                      "total": {
                        "type": "number",
                        "example": 1800
                      },
                      "order_gross": {
                        "type": "number",
                        "example": 2000
                      },
                      "discount_amount": {
                        "type": "number",
                        "example": 100
                      },
                      "total_misc": {
                        "type": "number",
                        "example": 50
                      },
                      "taxable": {
                        "type": "number",
                        "example": 1700
                      },
                      "tax_amount": {
                        "type": "number",
                        "example": 100
                      },
                      "freight": {
                        "type": "number",
                        "example": 75
                      },
                      "orderGp": {
                        "type": "number",
                        "example": 120
                      },
                      "additionalItems": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "item": {
                              "type": "string",
                              "example": "Delivery Fee"
                            },
                            "cost": {
                              "type": "number",
                              "example": 50
                            },
                            "price": {
                              "type": "number",
                              "example": 60
                            }
                          }
                        }
                      }
                    }
                  },
                  "customerDetails": {
                    "type": "string",
                    "example": "ABC Builders Pvt Ltd"
                  },
                  "notes": {
                    "type": "string",
                    "example": "Urgent delivery required"
                  },
                  "status": {
                    "type": "string",
                    "example": "pending"
                  },
                  "wanted": {
                    "type": "string",
                    "example": "2025-09-15"
                  },
                  "customer_po": {
                    "type": "string",
                    "example": "PO-4521"
                  },
                  "salesOrderType": {
                    "type": "string",
                    "example": "Standard"
                  },
                  "contracts": {
                    "type": "string",
                    "example": "Contract-998"
                  },
                  "shipOrderType": {
                    "type": "string",
                    "example": "Express"
                  },
                  "contractor_id": {
                    "type": "integer",
                    "example": 201
                  },
                  "enteredBy": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "shipDetail": {
                    "type": "string",
                    "example": "Via FedEx Overnight"
                  },
                  "dateOrdered": {
                    "type": "string",
                    "format": "date",
                    "example": "2025-09-03"
                  },
                  "headerTab": {
                    "type": "object",
                    "properties": {
                      "terms_code": {
                        "type": "string",
                        "example": "NET30"
                      },
                      "tax_code": {
                        "type": "string",
                        "example": "GST-18"
                      },
                      "order_by": {
                        "type": "string",
                        "example": "Admin"
                      },
                      "phone": {
                        "type": "string",
                        "example": "+1-234-567-890"
                      },
                      "price_by": {
                        "type": "string",
                        "example": "List"
                      },
                      "warehouse": {
                        "type": "string",
                        "example": "WH-001"
                      },
                      "sales1": {
                        "type": "string",
                        "example": "Alex"
                      },
                      "email": {
                        "type": "string",
                        "example": "sales@company.com"
                      },
                      "finances_type": {
                        "type": "string",
                        "example": "Credit"
                      }
                    }
                  },
                  "materialItems": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "item": {
                          "type": "string",
                          "example": "Steel Rod"
                        },
                        "description": {
                          "type": "string",
                          "example": "10mm Steel Rod"
                        },
                        "qty": {
                          "type": "integer",
                          "example": 100
                        },
                        "cost": {
                          "type": "number",
                          "example": 5.5
                        },
                        "margin": {
                          "type": "number",
                          "example": 10
                        },
                        "commission": {
                          "type": "number",
                          "example": 2
                        },
                        "price": {
                          "type": "number",
                          "example": 6.0
                        },
                        "total": {
                          "type": "number",
                          "example": 600
                        },
                        "notes": {
                          "type": "string",
                          "example": "Deliver in batches"
                        },
                        "uom": {
                          "type": "string",
                          "example": "pcs"
                        },
                        "stdCost": {
                          "type": "number",
                          "example": 5
                        },
                        "extPrice": {
                          "type": "number",
                          "example": 605
                        },
                        "list_price": {
                          "type": "number",
                          "example": 6.5
                        },
                        "sort_order": {
                          "type": "integer",
                          "example": 1
                        },
                        "onOrder": {
                          "type": "integer",
                          "example": 50
                        },
                        "bo": {
                          "type": "string",
                          "example": "No"
                        },
                        "other1": {
                          "type": "string",
                          "example": "Custom field 1"
                        },
                        "requestedDate": {
                          "type": "string",
                          "format": "date",
                          "example": "2025-09-20"
                        },
                        "warehouse": {
                          "type": "string",
                          "example": "WH-002"
                        },
                        "costPer": {
                          "type": "number",
                          "example": 2.5
                        },
                        "expectedDate": {
                          "type": "string",
                          "format": "date",
                          "example": "2025-09-25"
                        },
                        "receivedToDate": {
                          "type": "string",
                          "example": "0"
                        },
                        "openTotal": {
                          "type": "number",
                          "example": 300
                        },
                        "transferToWarehouse": {
                          "type": "string",
                          "example": "WH-003"
                        },
                        "origin": {
                          "type": "string",
                          "example": "USA"
                        },
                        "other2": {
                          "type": "string",
                          "example": "Custom field 2"
                        },
                        "discPct": {
                          "type": "number",
                          "example": 5
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sale Material Quotes added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Sale Material Quotes added successfully"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation failed or quote creation failed"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/saleMaterial/getSaleMaterialQuotesById": {
      "get": {
        "tags": ["SaleMaterialQuotes"],
        "summary": "Get Sale Material Quote by ID",
        "description": "Fetch a single Sale Material Quote by its ID along with related header, totals, additional items, and material items.",
        "operationId": "getSaleMaterialQuotesById",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "name": "saleMaterialQuotesId",
            "in": "query",
            "required": true,
            "description": "The ID of the Sale Material Quote",
            "schema": {
              "type": "integer",
              "example": 101
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sale Material Quote displayed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Sale Material Quotes displayed successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 101
                        },
                        "customer_id": {
                          "type": "integer",
                          "example": 55
                        },
                        "lead_project_id": {
                          "type": "integer",
                          "example": 12
                        },
                        "ship_to": {
                          "type": "string",
                          "example": "New York Warehouse"
                        },
                        "material_total": {
                          "type": "number",
                          "example": 1500
                        },
                        "total": {
                          "type": "number",
                          "example": 1800
                        },
                        "order_gross": {
                          "type": "number",
                          "example": 2000
                        },
                        "discount_amount": {
                          "type": "number",
                          "example": 100
                        },
                        "tax_amount": {
                          "type": "number",
                          "example": 150
                        },
                        "freight": {
                          "type": "number",
                          "example": 75
                        },
                        "notes": {
                          "type": "string",
                          "example": "Urgent delivery"
                        },
                        "status": {
                          "type": "string",
                          "example": "pending"
                        },
                        "customer_po": {
                          "type": "string",
                          "example": "PO-4521"
                        },
                        "dateOrdered": {
                          "type": "string",
                          "format": "date",
                          "example": "2025-09-03"
                        },
                        "headerTab": {
                          "type": "object",
                          "properties": {
                            "terms_code": {
                              "type": "string",
                              "example": "NET30"
                            },
                            "tax_code": {
                              "type": "string",
                              "example": "GST-18"
                            },
                            "order_by": {
                              "type": "string",
                              "example": "Admin"
                            },
                            "warehouse": {
                              "type": "string",
                              "example": "WH-001"
                            },
                            "sales1": {
                              "type": "string",
                              "example": "Alex"
                            }
                          }
                        },
                        "additionalItems": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "item": {
                                "type": "string",
                                "example": "Delivery Fee"
                              },
                              "cost": {
                                "type": "number",
                                "example": 50
                              },
                              "price": {
                                "type": "number",
                                "example": 60
                              }
                            }
                          }
                        },
                        "materialItems": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "item": {
                                "type": "string",
                                "example": "Steel Rod"
                              },
                              "description": {
                                "type": "string",
                                "example": "10mm Steel Rod"
                              },
                              "qty": {
                                "type": "integer",
                                "example": 100
                              },
                              "cost": {
                                "type": "number",
                                "example": 5.5
                              },
                              "price": {
                                "type": "number",
                                "example": 6.0
                              },
                              "total": {
                                "type": "number",
                                "example": 600
                              },
                              "uom": {
                                "type": "string",
                                "example": "pcs"
                              },
                              "warehouse": {
                                "type": "string",
                                "example": "WH-002"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error occurred while fetching Sale Material Quote"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Sale Material Quote not found"
          }
        }
      }
    },
    "/saleMaterial/getAllSaleMaterialQuotes": {
      "get": {
        "tags": ["SaleMaterialQuotes"],
        "summary": "Get All Sale Material Quotes",
        "description": "Fetch paginated list of Sale Material Quotes with optional search filter.",
        "operationId": "getAllSaleMaterialQuotes",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Page number for pagination",
            "schema": {
              "type": "integer",
              "default": 1,
              "example": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "description": "Number of records per page",
            "schema": {
              "type": "integer",
              "default": 10,
              "example": 10
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "description": "Search term for filtering Sale Material Quotes",
            "schema": {
              "type": "string",
              "example": "warehouse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sale Material Quotes displayed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Sale Material Quotes displayed successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "example": 1
                        },
                        "per_page": {
                          "type": "integer",
                          "example": 10
                        },
                        "total_records": {
                          "type": "integer",
                          "example": 125
                        },
                        "total_pages": {
                          "type": "integer",
                          "example": 13
                        },
                        "records": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 101
                              },
                              "customer_id": {
                                "type": "integer",
                                "example": 55
                              },
                              "ship_to": {
                                "type": "string",
                                "example": "New York Warehouse"
                              },
                              "total": {
                                "type": "number",
                                "example": 1800
                              },
                              "status": {
                                "type": "string",
                                "example": "pending"
                              },
                              "customer_po": {
                                "type": "string",
                                "example": "PO-4521"
                              },
                              "dateOrdered": {
                                "type": "string",
                                "format": "date",
                                "example": "2025-09-03"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error occurred while fetching Sale Material Quotes"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Sale Material Quotes not found"
          }
        }
      }
    },
    "/saleMaterial/deleteSaleMaterialQuotes": {
      "delete": {
        "tags": ["SaleMaterialQuotes"],
        "summary": "Delete Sale Material Quote",
        "description": "Deletes a Sale Material Quote by ID.",
        "operationId": "deleteSaleMaterialQuotes",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "name": "saleMaterialQuotesId",
            "in": "query",
            "required": true,
            "description": "ID of the Sale Material Quote to delete",
            "schema": {
              "type": "integer",
              "example": 101
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sale Material Quote deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Sale Material Quotes deleted successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 101
                        },
                        "deleted": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error occurred while deleting Sale Material Quote"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Sale Material Quote not found"
          }
        }
      }
    },
    "/saleMaterial/updateSaleMaterialQuotes": {
      "put": {
        "tags": ["SaleMaterialQuotes"],
        "summary": "Update Sale Material Quote",
        "description": "Updates an existing Sale Material Quote along with header, additional items, and material items.",
        "operationId": "updateSaleMaterialQuotes",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "name": "saleMaterialQuotesId",
            "in": "query",
            "required": true,
            "description": "ID of the Sale Material Quote to update",
            "schema": {
              "type": "integer",
              "example": 101
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customer_id": {
                    "type": "integer",
                    "example": 5
                  },
                  "lead_project_id": {
                    "type": "integer",
                    "example": 12
                  },
                  "ship_to": {
                    "type": "string",
                    "example": "New York Warehouse"
                  },
                  "notes": {
                    "type": "string",
                    "example": "Urgent order"
                  },
                  "status": {
                    "type": "string",
                    "example": "Pending"
                  },
                  "wanted": {
                    "type": "string",
                    "example": "2025-09-15"
                  },
                  "customer_po": {
                    "type": "string",
                    "example": "PO-2025-889"
                  },
                  "dateOrdered": {
                    "type": "string",
                    "example": "2025-09-01"
                  },
                  "headerTab": {
                    "type": "object",
                    "properties": {
                      "terms_code": {
                        "type": "string",
                        "example": "NET30"
                      },
                      "tax_code": {
                        "type": "string",
                        "example": "TX01"
                      },
                      "order_by": {
                        "type": "string",
                        "example": "John Doe"
                      },
                      "phone": {
                        "type": "string",
                        "example": "1234567890"
                      },
                      "warehouse": {
                        "type": "string",
                        "example": "WH1"
                      },
                      "email": {
                        "type": "string",
                        "example": "john@example.com"
                      }
                    }
                  },
                  "totalTab": {
                    "type": "object",
                    "properties": {
                      "material_total": {
                        "type": "number",
                        "example": 1200.5
                      },
                      "total": {
                        "type": "number",
                        "example": 1500.75
                      },
                      "order_gross": {
                        "type": "number",
                        "example": 1700.0
                      },
                      "discount_amount": {
                        "type": "number",
                        "example": 100.0
                      },
                      "taxable": {
                        "type": "boolean",
                        "example": true
                      },
                      "tax_amount": {
                        "type": "number",
                        "example": 80.0
                      },
                      "freight": {
                        "type": "number",
                        "example": 50.0
                      },
                      "orderGp": {
                        "type": "number",
                        "example": 250.0
                      },
                      "additionalItems": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "item": {
                              "type": "string",
                              "example": "Extra Handling"
                            },
                            "cost": {
                              "type": "number",
                              "example": 20.0
                            },
                            "price": {
                              "type": "number",
                              "example": 30.0
                            }
                          }
                        }
                      }
                    }
                  },
                  "materialItems": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "item": {
                          "type": "string",
                          "example": "Steel Rod"
                        },
                        "description": {
                          "type": "string",
                          "example": "High-quality steel"
                        },
                        "qty": {
                          "type": "integer",
                          "example": 10
                        },
                        "cost": {
                          "type": "number",
                          "example": 50.0
                        },
                        "margin": {
                          "type": "number",
                          "example": 10.0
                        },
                        "commission": {
                          "type": "number",
                          "example": 5.0
                        },
                        "price": {
                          "type": "number",
                          "example": 60.0
                        },
                        "total": {
                          "type": "number",
                          "example": 600.0
                        },
                        "uom": {
                          "type": "string",
                          "example": "PCS"
                        },
                        "requestedDate": {
                          "type": "string",
                          "example": "2025-09-10"
                        },
                        "warehouse": {
                          "type": "string",
                          "example": "WH1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sale Material Quote updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Sale Material Quotes updated successfully"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error occurred while updating Sale Material Quote"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Sale Material Quote not found"
          }
        }
      }
    },
    "/saleMaterial/CheckleadContractor": {
      "post": {
        "tags": ["SaleMaterialQuotes"],
        "summary": "Check if a lead has an assigned contractor",
        "description": "Validates whether a contractor is assigned to a given leadId.",
        "operationId": "CheckleadContractor",
        "security": [
          {
            "jwt": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "leadId": {
                    "type": "integer",
                    "example": 123,
                    "description": "Lead ID to check"
                  }
                },
                "required": ["leadId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contractor check completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Check completed"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "assigned": {
                          "type": "boolean",
                          "example": true,
                          "description": "Whether contractor is assigned"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Check failed - missing or invalid leadId"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/productCategories/addProductCategories": {
      "post": {
        "tags": ["ProductCategories"],
        "summary": "Add a new product category",
        "description": "Creates a new product category with the given name.",
        "operationId": "addProductCategories",
        "security": [
          {
            "jwt": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Electronics",
                    "description": "Name of the product category"
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product category added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Product Categories added successfully"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to add product category"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/productCategories/getProductCategoriesById": {
      "get": {
        "tags": ["ProductCategories"],
        "summary": "Get a product category by ID",
        "description": "Fetches a single product category using its ID.",
        "operationId": "getProductCategoriesById",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "name": "productCategoriesId",
            "in": "query",
            "description": "ID of the product category to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product category fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Product Categories displayed successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Electronics"
                        },
                        "user_id": {
                          "type": "integer",
                          "example": 101
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to fetch product category"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/productCategories/getAllProductCategories": {
      "get": {
        "tags": ["ProductCategories"],
        "summary": "Get all product categories",
        "description": "Fetches a paginated list of all product categories with optional search.",
        "operationId": "getAllProductCategories",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search term to filter product categories",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Electronics"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product categories fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Product Categories displayed successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "type": "string",
                            "example": "Electronics"
                          },
                          "user_id": {
                            "type": "integer",
                            "example": 101
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to fetch product categories"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/productCategories/deleteProductCategories": {
      "delete": {
        "tags": ["ProductCategories"],
        "summary": "Delete a product category",
        "description": "Deletes a product category by ID.",
        "operationId": "deleteProductCategories",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "name": "productCategoriesId",
            "in": "query",
            "description": "ID of the product category to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product category deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Product Categories deleted successfully"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to delete product category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Product Categories deletion failed"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Product category not found"
          }
        }
      }
    },
    "/productCategories/updateProductCategories": {
      "put": {
        "tags": ["ProductCategories"],
        "summary": "Update a product category",
        "description": "Updates the name of a product category by its ID.",
        "operationId": "updateProductCategories",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "name": "productCategoriesId",
            "in": "query",
            "description": "ID of the product category to update",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Electronics"
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product category updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Product Categories updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update product category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Product Categories updation failed"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Product category not found"
          }
        }
      }
    },
    "/company/addCompany": {
      "post": {
        "tags": ["Company"],
        "summary": "Add a new company",
        "description": "Creates a new company with the provided details.",
        "operationId": "addCompany",
        "security": [
          {
            "jwt": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Acme Corp"
                  },
                  "company_type": {
                    "type": "string",
                    "example": "Private"
                  },
                  "address": {
                    "type": "string",
                    "example": "123 Main St"
                  },
                  "state": {
                    "type": "string",
                    "example": "California"
                  },
                  "city": {
                    "type": "string",
                    "example": "Los Angeles"
                  },
                  "zip": {
                    "type": "string",
                    "example": "90001"
                  },
                  "company_notes": {
                    "type": "string",
                    "example": "Important client"
                  },
                  "company_lead_score": {
                    "type": "number",
                    "example": 85
                  },
                  "tax": {
                    "type": "number",
                    "example": 7.5
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Company added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Company added successfully"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "id": 1,
                        "name": "Acme Corp"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Company creation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Company creation failed"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/company/getCompanyById": {
      "get": {
        "tags": ["Company"],
        "summary": "Get a company by ID",
        "description": "Fetches the details of a single company by its ID.",
        "operationId": "getCompanyById",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "name": "company",
            "in": "query",
            "description": "ID of the company to fetch",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 4
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Company fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Company fetched successfully"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "id": 4,
                        "name": "Acme Corp",
                        "company_type": "Private",
                        "address": "123 Main St",
                        "state": "California",
                        "city": "Los Angeles",
                        "zip": "90001",
                        "company_notes": "Important client",
                        "company_lead_score": 85,
                        "tax": 7.5
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Company ID is required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "status": false,
                    "message": "Company ID is required"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Company not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "status": false,
                    "message": "Company not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to fetch Company",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "status": false,
                    "message": "Failed to fetch Company",
                    "error": "Internal server error message"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/company/getAllCompany": {
      "get": {
        "tags": ["Company"],
        "summary": "Get all companies",
        "description": "Fetch all companies. Optionally supports query parameters for filtering/pagination.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search keyword",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of companies fetched successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": true,
                  "message": "Company fetched successfully",
                  "data": [
                    {
                      "id": 1,
                      "name": "Company A",
                      "company_type": "Private",
                      "address": "123 Street",
                      "city": "CityName",
                      "state": "StateName",
                      "zip": "12345",
                      "tax": "123456",
                      "company_notes": "Notes here"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Failed to fetch company",
            "content": {
              "application/json": {
                "example": {
                  "status": false,
                  "message": "Failed to fetch company",
                  "error": "Error details"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/company/deleteCompany": {
      "delete": {
        "tags": ["Company"],
        "summary": "Delete a company",
        "description": "Delete a company by its ID.",
        "parameters": [
          {
            "name": "company",
            "in": "query",
            "description": "ID of the company to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Company deleted successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": true,
                  "message": "Company deleted successfully"
                }
              }
            }
          },
          "400": {
            "description": "Company ID is missing",
            "content": {
              "application/json": {
                "example": {
                  "status": false,
                  "message": "Company ID is required"
                }
              }
            }
          },
          "404": {
            "description": "Company not found",
            "content": {
              "application/json": {
                "example": {
                  "status": false,
                  "message": "Company not found"
                }
              }
            }
          },
          "500": {
            "description": "Failed to delete company",
            "content": {
              "application/json": {
                "example": {
                  "status": false,
                  "message": "Failed to delete Company",
                  "error": "Error details"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/company/updateCompany": {
      "put": {
        "tags": ["Company"],
        "summary": "Update a company",
        "description": "Update a company's details by its ID.",
        "parameters": [
          {
            "name": "company",
            "in": "query",
            "description": "ID of the company to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "name": "Updated Company Name",
                "company_type": "Type A",
                "address": "123 Main St",
                "state": "State",
                "city": "City",
                "zip": "12345",
                "company_notes": "Some notes",
                "company_lead_score": 85,
                "tax": "12%"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Company updated successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": true,
                  "message": "Company updated successfully",
                  "data": {
                    "id": 1,
                    "name": "Updated Company Name"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Company not found",
            "content": {
              "application/json": {
                "example": {
                  "status": false,
                  "message": "Company not found"
                }
              }
            }
          },
          "500": {
            "description": "Failed to update company",
            "content": {
              "application/json": {
                "example": {
                  "status": false,
                  "message": "Failed to update company",
                  "error": "Error details"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/company-type/addCompanyType": {
      "post": {
        "tags": ["Company Type"],
        "summary": "Add a new company type",
        "description": "Creates a new company type with name, background color, and sort order.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "name": "Retail",
                "background_color": "#FF5733",
                "sort_order": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Company type added successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": true,
                  "message": "Company added successfully",
                  "data": {
                    "id": 1,
                    "name": "Retail"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation failed or creation error",
            "content": {
              "application/json": {
                "example": {
                  "status": false,
                  "message": "Company creation failed",
                  "data": {}
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/company-type/getAllCompanyType": {
      "get": {
        "tags": ["Company Type"],
        "summary": "Fetch all company types",
        "description": "Retrieves all company types with optional query parameters for filtering/pagination.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "required": false,
            "description": "Page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "required": false,
            "description": "Number of items per page"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Search term for filtering company types"
          }
        ],
        "responses": {
          "200": {
            "description": "Company types fetched successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": true,
                  "message": "Company type fetched successfully",
                  "data": [
                    {
                      "id": 1,
                      "name": "Retail",
                      "background_color": "#FF5733",
                      "sort_order": 1
                    },
                    {
                      "id": 2,
                      "name": "Wholesale",
                      "background_color": "#33FF57",
                      "sort_order": 2
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Failed to fetch company type",
            "content": {
              "application/json": {
                "example": {
                  "status": false,
                  "message": "Failed to fetch company type",
                  "error": "Database connection failed"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/company-type/getCompanyTypeById": {
      "get": {
        "tags": ["Company Type"],
        "summary": "Fetch a company type by ID",
        "description": "Retrieve details of a specific company type using its ID.",
        "parameters": [
          {
            "name": "companyType",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the company type"
          }
        ],
        "responses": {
          "200": {
            "description": "Company type fetched successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": true,
                  "message": "Company type fetched successfully",
                  "data": {
                    "id": 1,
                    "name": "Retail",
                    "background_color": "#FF5733",
                    "sort_order": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing company type ID",
            "content": {
              "application/json": {
                "example": {
                  "status": false,
                  "message": "Company type ID is required"
                }
              }
            }
          },
          "404": {
            "description": "Company type not found",
            "content": {
              "application/json": {
                "example": {
                  "status": false,
                  "message": "Company type not found"
                }
              }
            }
          },
          "500": {
            "description": "Failed to fetch company type",
            "content": {
              "application/json": {
                "example": {
                  "status": false,
                  "message": "Failed to fetch Company type",
                  "error": "Database connection failed"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/company-type/deleteCompanyType": {
      "delete": {
        "tags": ["Company Type"],
        "summary": "Delete a company type by ID",
        "description": "Deletes a specific company type using its ID.",
        "parameters": [
          {
            "name": "companyType",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the company type to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Company type deleted successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": true,
                  "message": "Company type deleted successfully"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/company-type/updateCompanyType": {
      "put": {
        "tags": ["Company Type"],
        "summary": "Update a company type by ID",
        "description": "Updates a specific company type using its ID.",
        "parameters": [
          {
            "name": "companyType",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the company type to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "background_color": {
                    "type": "string"
                  },
                  "sort_order": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Company type updated successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": true,
                  "message": "Company type updated successfully",
                  "data": {
                    "id": 1,
                    "name": "Updated Name",
                    "background_color": "#ffffff",
                    "sort_order": 1
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/brands/addBrand": {
      "post": {
        "tags": ["Brands"],
        "summary": "Add a new brand",
        "description": "Creates a new brand with name and status.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Brand Name"
                  },
                  "status": {
                    "type": "boolean",
                    "example": true
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Brand added successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": true,
                  "message": "Brand added successfully",
                  "data": {
                    "id": 1,
                    "name": "Brand Name",
                    "status": true,
                    "user_id": 123
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/brands": {
      "get": {
        "tags": ["Brands"],
        "summary": "Fetch all brands",
        "description": "Retrieve a list of all brands.",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search term for filtering brands"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Brands fetched successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": true,
                  "message": "Brands fetched successfully",
                  "data": [
                    {
                      "id": 1,
                      "name": "Brand 1",
                      "status": true,
                      "user_id": 123
                    },
                    {
                      "id": 2,
                      "name": "Brand 2",
                      "status": true,
                      "user_id": 124
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/brands/{id}": {
      "get": {
        "tags": ["Brands"],
        "summary": "Fetch a single brand by ID",
        "description": "Retrieve details of a brand using its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the brand to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "Brand fetched successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": true,
                  "message": "Brand fetched successfully",
                  "data": {
                    "id": 1,
                    "name": "Brand 1",
                    "status": true,
                    "user_id": 123
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/brands/deleteBrand/{id}": {
      "delete": {
        "tags": ["Brands"],
        "summary": "Delete a brand by ID",
        "description": "Delete a brand using its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the brand to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Brand deleted successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": true,
                  "message": "Brand deleted successfully"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/brands/updateBrand/{id}": {
      "put": {
        "tags": ["Brands"],
        "summary": "Update a brand by ID",
        "description": "Update brand information using its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the brand to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "type": "boolean"
                  }
                }
              },
              "example": {
                "name": "Updated Brand Name",
                "status": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Brand updated successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": true,
                  "message": "Brand updated successfully",
                  "data": {
                    "id": 1,
                    "name": "Updated Brand Name",
                    "status": true
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/taxes/addtaxes": {
      "post": {
        "tags": ["Taxes"],
        "summary": "Add a new tax",
        "description": "Create a new tax record.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "rate": {
                    "type": "number"
                  },
                  "zipcode": {
                    "type": "string"
                  }
                },
                "required": ["name", "rate"]
              },
              "example": {
                "name": "GST",
                "rate": 18,
                "zipcode": "12345"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tax added successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": true,
                  "message": "Taxes added successfully",
                  "data": {
                    "id": 1,
                    "name": "GST",
                    "rate": 18,
                    "zipcode": "12345"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/taxes/getAllTaxes": {
      "get": {
        "tags": ["Taxes"],
        "summary": "Get all taxes",
        "description": "Fetch all taxes with optional pagination and search.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "take_all",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Taxes displayed successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": true,
                  "message": "Taxes displayed successfully",
                  "data": [
                    {
                      "id": 1,
                      "name": "GST",
                      "rate": 18,
                      "zipcode": "12345"
                    },
                    {
                      "id": 2,
                      "name": "VAT",
                      "rate": 12,
                      "zipcode": "54321"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/taxes/getTaxesById": {
      "get": {
        "tags": ["Taxes"],
        "summary": "Get a tax by ID",
        "description": "Fetch a single tax by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tax fetched successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": true,
                  "message": "taxes fetched successfully",
                  "data": {
                    "id": 1,
                    "name": "GST",
                    "rate": 18,
                    "zipcode": "12345"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/taxes/deleteTaxes": {
      "delete": {
        "tags": ["Taxes"],
        "summary": "Delete a tax by ID",
        "description": "Deletes a single tax by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the tax to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Taxes deleted successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": true,
                  "message": "Taxes deleted successfully"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/taxes/updateTaxes": {
      "put": {
        "tags": ["Taxes"],
        "summary": "Update a tax by ID",
        "description": "Updates an existing tax by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the tax to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "rate": {
                    "type": "number"
                  },
                  "zipcode": {
                    "type": "string"
                  }
                },
                "required": ["name", "rate"]
              },
              "example": {
                "name": "GST",
                "rate": 18,
                "zipcode": "110001"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Taxes updated successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": true,
                  "message": "Taxes updated successfully",
                  "data": {
                    "id": 1,
                    "name": "GST",
                    "rate": 18,
                    "zipcode": "110001"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/serviceTypeItem/addServiceTypeItem": {
      "post": {
        "tags": ["ServiceTypeItem"],
        "summary": "Add Service Type Item",
        "description": "Creates a new Service Type Item with cost, pricing, and other details.",
        "operationId": "addServiceTypeItem",
        "security": [
          {
            "jwt": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "item_name": {
                    "type": "string",
                    "example": "Electrical Wiring"
                  },
                  "zip_code": {
                    "type": "string",
                    "example": "12345"
                  },
                  "service_region": {
                    "type": "string",
                    "example": "North Zone"
                  },
                  "contractor": {
                    "type": "string",
                    "example": "XYZ Contractors Ltd"
                  },
                  "uom": {
                    "type": "string",
                    "example": "pcs"
                  },
                  "std_cost": {
                    "type": "integer",
                    "example": 100
                  },
                  "last_cost": {
                    "type": "integer",
                    "example": 95
                  },
                  "average_cost": {
                    "type": "integer",
                    "example": 98
                  },
                  "margin": {
                    "type": "integer",
                    "example": 10
                  },
                  "price": {
                    "type": "integer",
                    "example": 120
                  },
                  "qty": {
                    "type": "integer",
                    "example": 500
                  },
                  "per": {
                    "type": "integer",
                    "example": 1
                  },
                  "tax": {
                    "type": "integer",
                    "example": 18
                  },
                  "lead_time": {
                    "type": "integer",
                    "example": 7
                  },
                  "calc_lead_time": {
                    "type": "integer",
                    "example": 10
                  },
                  "expiration_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2026-01-01"
                  },
                  "effective_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2025-09-16"
                  },
                  "last_sold_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2025-08-10"
                  },
                  "fut_effective_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2025-12-01"
                  },
                  "fut_effective_cost": {
                    "type": "integer",
                    "example": 110
                  },
                  "notes": {
                    "type": "string",
                    "example": "For project-based contracts"
                  },
                  "inventory_id": {
                    "type": "integer",
                    "example": 201
                  },
                  "isTax": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Service Type Item added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Service Type Item added successfully"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation failed or item creation failed"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/serviceTypeItem/getServiceTypeItemById": {
      "get": {
        "tags": ["ServiceTypeItem"],
        "summary": "Get Service Type Item by ID",
        "description": "Retrieve a specific Service Type Item using its ID.",
        "operationId": "getServiceTypeItemById",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "serviceTypeItemId",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 101
            },
            "description": "ID of the Service Type Item"
          }
        ],
        "responses": {
          "200": {
            "description": "Service Type Item fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Service Type Item displayed successfully"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID or Service Type Item not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/serviceTypeItem/getAllServiceTypeItems": {
      "get": {
        "tags": ["ServiceTypeItem"],
        "summary": "Get All Service Type Items",
        "description": "Retrieve a paginated list of all Service Type Items with optional search filter.",
        "operationId": "getAllServiceTypeItems",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "example": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "example": 10
            },
            "description": "Number of records per page"
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Electrical"
            },
            "description": "Search keyword for filtering items"
          }
        ],
        "responses": {
          "200": {
            "description": "Service Type Items fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Service Type Item displayed successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "integer",
                              "example": 1
                            },
                            "per_page": {
                              "type": "integer",
                              "example": 10
                            },
                            "total": {
                              "type": "integer",
                              "example": 50
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error occurred while fetching Service Type Items"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/serviceTypeItem/deleteServiceTypeItems": {
      "delete": {
        "tags": ["ServiceTypeItem"],
        "summary": "Delete Service Type Item",
        "description": "Deletes a specific Service Type Item by its ID.",
        "operationId": "deleteServiceTypeItems",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "serviceTypeItemId",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 101
            },
            "description": "ID of the Service Type Item to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Service Type Item deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Service Type Items deleted successfully"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID or deletion failed"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/serviceTypeItem/updateServiceTypeItems": {
      "put": {
        "tags": ["ServiceTypeItem"],
        "summary": "Update Service Type Item",
        "description": "Updates an existing Service Type Item by its ID with new cost, pricing, and other details.",
        "operationId": "updateServiceTypeItems",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "serviceTypeItemId",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 101
            },
            "description": "ID of the Service Type Item to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "item_name": {
                    "type": "string",
                    "example": "Updated Electrical Wiring"
                  },
                  "zip_code": {
                    "type": "string",
                    "example": "54321"
                  },
                  "service_region": {
                    "type": "string",
                    "example": "South Zone"
                  },
                  "contractor": {
                    "type": "string",
                    "example": "ABC Contractors Ltd"
                  },
                  "uom": {
                    "type": "string",
                    "example": "kg"
                  },
                  "std_cost": {
                    "type": "integer",
                    "example": 150
                  },
                  "last_cost": {
                    "type": "integer",
                    "example": 145
                  },
                  "average_cost": {
                    "type": "integer",
                    "example": 148
                  },
                  "margin": {
                    "type": "integer",
                    "example": 15
                  },
                  "price": {
                    "type": "integer",
                    "example": 180
                  },
                  "qty": {
                    "type": "integer",
                    "example": 300
                  },
                  "per": {
                    "type": "integer",
                    "example": 2
                  },
                  "tax": {
                    "type": "integer",
                    "example": 12
                  },
                  "lead_time": {
                    "type": "integer",
                    "example": 5
                  },
                  "calc_lead_time": {
                    "type": "integer",
                    "example": 8
                  },
                  "expiration_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2026-02-01"
                  },
                  "effective_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2025-09-20"
                  },
                  "last_sold_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2025-09-10"
                  },
                  "fut_effective_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2025-12-15"
                  },
                  "fut_effective_cost": {
                    "type": "integer",
                    "example": 160
                  },
                  "notes": {
                    "type": "string",
                    "example": "Updated notes for service type item"
                  },
                  "inventory_id": {
                    "type": "integer",
                    "example": 205
                  },
                  "isTax": {
                    "type": "boolean",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Service Type Item updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Service Type Item updated successfully"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation failed or update failed"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/serviceTypeItem/getAllServiceTypeById": {
      "get": {
        "tags": ["ServiceTypeItem"],
        "summary": "Get Service Type Items by ID or Name",
        "description": "Retrieve Service Type Items filtered by itemId or itemName.",
        "operationId": "getAllServiceTypeById",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "itemId",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 101
            },
            "description": "ID of the Service Type Item"
          },
          {
            "in": "query",
            "name": "itemName",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Electrical Wiring"
            },
            "description": "Name of the Service Type Item"
          }
        ],
        "responses": {
          "200": {
            "description": "Service Type Items fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Service Type Item displayed successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Service Type Item not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Service Type Item not found"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error occurred while fetching Service Type Items"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/serviceTypeItem/importServiceTypeItem": {
      "post": {
        "tags": ["ServiceTypeItem"],
        "summary": "Import Service Type Items from CSV/Excel",
        "description": "Uploads a file (CSV/Excel) and imports Service Type Items into the system.",
        "operationId": "importServiceTypeItem",
        "security": [
          {
            "jwt": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "CSV or Excel file containing Service Type Items"
                  }
                },
                "required": ["file"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Service Type Items imported successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Service Type Item Services Import completed"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No file uploaded or validation failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Import failed due to server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Import failed"
                    },
                    "error": {
                      "type": "string",
                      "example": "File format not supported"
                    },
                    "stack": {
                      "type": "string",
                      "example": "Error stack trace"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/wareHouseItems/addWareHouseItems": {
      "post": {
        "tags": ["WareHouseItems"],
        "summary": "Add Warehouse Item",
        "description": "Creates a new Warehouse Item with key fields, pricing, costing, quantities, locations, units, and purchasing details.",
        "operationId": "addWareHouseItems",
        "security": [
          {
            "jwt": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "keyFields": {
                    "type": "object",
                    "properties": {
                      "itemNumber": {
                        "type": "string",
                        "example": "ITM-101"
                      },
                      "description": {
                        "type": "string",
                        "example": "Steel Rod 10mm"
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-09-16"
                      },
                      "contractor_id": {
                        "type": "integer",
                        "example": 201
                      }
                    }
                  },
                  "pricing": {
                    "type": "object",
                    "properties": {
                      "per": {
                        "type": "integer",
                        "example": 1
                      },
                      "listPrice": {
                        "type": "number",
                        "example": 50
                      },
                      "fullList": {
                        "type": "number",
                        "example": 55
                      },
                      "fullRetail": {
                        "type": "number",
                        "example": 60
                      },
                      "unitCost": {
                        "type": "number",
                        "example": 40
                      },
                      "effectiveDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-09-16"
                      }
                    }
                  },
                  "costing": {
                    "type": "object",
                    "properties": {
                      "costPerEA": {
                        "type": "number",
                        "example": 5
                      },
                      "stdCost": {
                        "type": "number",
                        "example": 50
                      },
                      "fullStd": {
                        "type": "number",
                        "example": 55
                      },
                      "average": {
                        "type": "number",
                        "example": 52
                      },
                      "lastAvg": {
                        "type": "number",
                        "example": 53
                      },
                      "lastLand": {
                        "type": "number",
                        "example": 54
                      },
                      "baseCost": {
                        "type": "number",
                        "example": 50
                      }
                    }
                  },
                  "quantities": {
                    "type": "object",
                    "properties": {
                      "onHand": {
                        "type": "integer",
                        "example": 500
                      },
                      "committed": {
                        "type": "integer",
                        "example": 50
                      },
                      "available": {
                        "type": "integer",
                        "example": 450
                      },
                      "triRegOut": {
                        "type": "integer",
                        "example": 0
                      },
                      "triTotalOut": {
                        "type": "integer",
                        "example": 0
                      },
                      "backorder": {
                        "type": "integer",
                        "example": 10
                      },
                      "rented": {
                        "type": "integer",
                        "example": 5
                      },
                      "onPO": {
                        "type": "integer",
                        "example": 100
                      },
                      "tranRegIn": {
                        "type": "integer",
                        "example": 0
                      },
                      "tranTotalIn": {
                        "type": "integer",
                        "example": 0
                      },
                      "webAllow": {
                        "type": "boolean",
                        "example": true
                      },
                      "qtyAvail": {
                        "type": "integer",
                        "example": 400
                      },
                      "workOrder": {
                        "type": "integer",
                        "example": 0
                      }
                    }
                  },
                  "locations": {
                    "type": "object",
                    "properties": {
                      "shipping": {
                        "type": "string",
                        "example": "WH-001"
                      },
                      "receiving": {
                        "type": "string",
                        "example": "WH-002"
                      }
                    }
                  },
                  "units": {
                    "type": "object",
                    "properties": {
                      "allow": {
                        "type": "boolean",
                        "example": true
                      },
                      "uM": {
                        "type": "string",
                        "example": "pcs"
                      },
                      "webAllow": {
                        "type": "boolean",
                        "example": true
                      },
                      "qtyAvail": {
                        "type": "integer",
                        "example": 400
                      }
                    }
                  },
                  "purchasing": {
                    "type": "object",
                    "properties": {
                      "buyerType": {
                        "type": "string",
                        "example": "Internal"
                      },
                      "replenishPath": {
                        "type": "string",
                        "example": "Auto"
                      },
                      "seasonal": {
                        "type": "boolean",
                        "example": false
                      },
                      "safetyStock": {
                        "type": "integer",
                        "example": 50
                      },
                      "minQty": {
                        "type": "integer",
                        "example": 20
                      },
                      "maxQty": {
                        "type": "integer",
                        "example": 1000
                      },
                      "leadTime": {
                        "type": "integer",
                        "example": 7
                      },
                      "reorderPoint": {
                        "type": "integer",
                        "example": 100
                      }
                    }
                  },
                  "costingAdditions": {
                    "type": "object",
                    "properties": {
                      "standardCost": {
                        "type": "number",
                        "example": 50
                      },
                      "lastCost": {
                        "type": "number",
                        "example": 52
                      },
                      "averageCost": {
                        "type": "number",
                        "example": 51
                      },
                      "workingCost": {
                        "type": "number",
                        "example": 53
                      },
                      "costAdditions": {
                        "type": "number",
                        "example": 5
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Warehouse Item added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Warehouse Item added successfully"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation failed or Warehouse Item creation failed"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/wareHouseItems/getWareHouseItemById": {
      "get": {
        "tags": ["WareHouseItems"],
        "summary": "Get Warehouse Item by ID",
        "description": "Fetches a single Warehouse Item by its ID.",
        "operationId": "getWareHouseItemById",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 101
            },
            "description": "ID of the Warehouse Item"
          }
        ],
        "responses": {
          "200": {
            "description": "Warehouse Item fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "WareHouse item fetched successfully"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Warehouse Item ID is required"
          },
          "404": {
            "description": "Warehouse Item not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "WareHouse item not found"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to fetch Warehouse Item",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to fetch WareHouse"
                    },
                    "error": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/wareHouseItems/getAllWareHouseItems": {
      "get": {
        "tags": ["WareHouseItems"],
        "summary": "Get All Warehouse Items",
        "description": "Fetches all Warehouse Items with optional pagination and search filters.",
        "operationId": "getAllWareHouseItems",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Steel Rod"
            },
            "description": "Search term to filter items"
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 50
            },
            "description": "Maximum number of items to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "All Warehouse Items displayed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "All ware house Items displayed successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Getting all warehouse items failed"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/wareHouseItems/deleteWareHouseItems": {
      "delete": {
        "tags": ["WareHouseItems"],
        "summary": "Delete Warehouse Item",
        "description": "Deletes a Warehouse Item by its ID.",
        "operationId": "deleteWareHouseItems",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 101
            },
            "description": "ID of the Warehouse Item to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Warehouse Item deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "WareHouse item deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "WareHouse item ID is required"
          },
          "404": {
            "description": "Warehouse Item not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "WareHouse item not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to delete Warehouse Item",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to delete WareHouse item"
                    },
                    "error": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/wareHouseItems/updateWareHouseItems": {
      "put": {
        "tags": ["WareHouseItems"],
        "summary": "Update Warehouse Item",
        "description": "Updates an existing Warehouse Item by its ID with all details including pricing, quantities, costing, and locations.",
        "operationId": "updateWareHouseItems",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 101
            },
            "description": "ID of the Warehouse Item to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "keyFields": {
                    "type": "object",
                    "properties": {
                      "itemNumber": {
                        "type": "string",
                        "example": "WH-1001"
                      },
                      "description": {
                        "type": "string",
                        "example": "Steel Rod 10mm"
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-09-16"
                      },
                      "contractor_id": {
                        "type": "integer",
                        "example": 201
                      }
                    }
                  },
                  "pricing": {
                    "type": "object",
                    "properties": {
                      "per": {
                        "type": "integer",
                        "example": 1
                      },
                      "listPrice": {
                        "type": "number",
                        "example": 120
                      },
                      "fullList": {
                        "type": "number",
                        "example": 150
                      },
                      "fullRetail": {
                        "type": "number",
                        "example": 160
                      },
                      "unitCost": {
                        "type": "number",
                        "example": 100
                      },
                      "effectiveDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-09-16"
                      }
                    }
                  },
                  "costing": {
                    "type": "object",
                    "properties": {
                      "costPerEA": {
                        "type": "number",
                        "example": 5.5
                      },
                      "stdCost": {
                        "type": "number",
                        "example": 100
                      },
                      "fullStd": {
                        "type": "number",
                        "example": 105
                      },
                      "average": {
                        "type": "number",
                        "example": 102
                      },
                      "lastAvg": {
                        "type": "number",
                        "example": 98
                      },
                      "lastLand": {
                        "type": "number",
                        "example": 95
                      },
                      "baseCost": {
                        "type": "number",
                        "example": 100
                      }
                    }
                  },
                  "quantities": {
                    "type": "object",
                    "properties": {
                      "onHand": {
                        "type": "integer",
                        "example": 500
                      },
                      "committed": {
                        "type": "integer",
                        "example": 50
                      },
                      "available": {
                        "type": "integer",
                        "example": 450
                      },
                      "triRegOut": {
                        "type": "integer",
                        "example": 0
                      },
                      "triTotalOut": {
                        "type": "integer",
                        "example": 0
                      },
                      "backorder": {
                        "type": "integer",
                        "example": 0
                      },
                      "rented": {
                        "type": "integer",
                        "example": 0
                      },
                      "onPO": {
                        "type": "integer",
                        "example": 100
                      },
                      "tranRegIn": {
                        "type": "integer",
                        "example": 0
                      },
                      "tranTotalIn": {
                        "type": "integer",
                        "example": 0
                      },
                      "webAllow": {
                        "type": "integer",
                        "example": 1
                      },
                      "qtyAvail": {
                        "type": "integer",
                        "example": 450
                      },
                      "workOrder": {
                        "type": "integer",
                        "example": 5
                      }
                    }
                  },
                  "locations": {
                    "type": "object",
                    "properties": {
                      "shipping": {
                        "type": "string",
                        "example": "WH-001"
                      },
                      "receiving": {
                        "type": "string",
                        "example": "WH-002"
                      }
                    }
                  },
                  "units": {
                    "type": "object",
                    "properties": {
                      "allow": {
                        "type": "boolean",
                        "example": true
                      },
                      "uM": {
                        "type": "string",
                        "example": "pcs"
                      },
                      "webAllow": {
                        "type": "boolean",
                        "example": true
                      },
                      "qtyAvail": {
                        "type": "integer",
                        "example": 450
                      }
                    }
                  },
                  "purchasing": {
                    "type": "object",
                    "properties": {
                      "buyerType": {
                        "type": "string",
                        "example": "Internal"
                      },
                      "replenishPath": {
                        "type": "string",
                        "example": "Normal"
                      },
                      "seasonal": {
                        "type": "boolean",
                        "example": false
                      },
                      "safetyStock": {
                        "type": "integer",
                        "example": 50
                      },
                      "minQty": {
                        "type": "integer",
                        "example": 10
                      },
                      "maxQty": {
                        "type": "integer",
                        "example": 1000
                      },
                      "leadTime": {
                        "type": "integer",
                        "example": 7
                      },
                      "reorderPoint": {
                        "type": "integer",
                        "example": 20
                      }
                    }
                  },
                  "costingAdditions": {
                    "type": "object",
                    "properties": {
                      "standardCost": {
                        "type": "number",
                        "example": 100
                      },
                      "lastCost": {
                        "type": "number",
                        "example": 95
                      },
                      "averageCost": {
                        "type": "number",
                        "example": 98
                      },
                      "workingCost": {
                        "type": "number",
                        "example": 102
                      },
                      "costAdditions": {
                        "type": "number",
                        "example": 5
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Warehouse Item updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Warehouse Item updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Updating Warehouse Item failed"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "jwt": {
        "type": "apiKey",
        "name": "x-access-token",
        "in": "header"
      }
    }
  }
}
